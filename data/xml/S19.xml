<collection id="S19">
  <volume id="1">
    <meta>
      <booktitle>Proceedings of the Eighth Joint Conference on Lexical and Computational Semantics (*<fixed-case>SEM</fixed-case> 2019)</booktitle>
      <url hash="da651103">S19-1</url>
      <editor><first>Rada</first><last>Mihalcea</last></editor>
      <editor><first>Ekaterina</first><last>Shutova</last></editor>
      <editor><first>Lun-Wei</first><last>Ku</last></editor>
      <editor><first>Kilian</first><last>Evang</last></editor>
      <editor><first>Soujanya</first><last>Poria</last></editor>
      <publisher>Association for Computational Linguistics</publisher>
      <address>Minneapolis, Minnesota</address>
      <month>June</month>
      <year>2019</year>
    </meta>
    <frontmatter>
      <url hash="5ccfc31b">S19-1000</url>
      <bibkey>semeval-2019-joint</bibkey>
    </frontmatter>
    <paper id="1">
      <title><fixed-case>SUR</fixed-case>el: A Gold Standard for Incorporating Meaning Shifts into Term Extraction</title>
      <author><first>Anna</first><last>H&#228;tty</last></author>
      <author><first>Dominik</first><last>Schlechtweg</last></author>
      <author><first>Sabine</first><last>Schulte im Walde</last></author>
      <pages>1&#8211;8</pages>
      <abstract>We introduce SURel, a novel dataset with human-annotated meaning shifts between general-language and domain-specific contexts. We show that meaning shifts of term candidates cause errors in term extraction, and demonstrate that the SURel annotation reflects these errors. Furthermore, we illustrate that SURel enables us to assess optimisations of term extraction techniques when incorporating meaning shifts.</abstract>
      <url hash="cd5e172d">S19-1001</url>
      <doi>10.18653/v1/S19-1001</doi>
      <bibkey>hatty-etal-2019-surel</bibkey>
    </paper>
    <paper id="7">
      <title>Second-order contexts from lexical substitutes for few-shot learning of word representations</title>
      <author><first>Qianchu</first><last>Liu</last></author>
      <author><first>Diana</first><last>McCarthy</last></author>
      <author><first>Anna</first><last>Korhonen</last></author>
      <pages>61&#8211;67</pages>
      <abstract>There is a growing awareness of the need to handle rare and unseen words in word representation modelling. In this paper, we focus on few-shot learning of emerging concepts that fully exploits only a few available contexts. We introduce a substitute-based context representation technique that can be applied on an existing word embedding space. Previous context-based approaches to modelling unseen words only consider bag-of-word first-order contexts, whereas our method aggregates contexts as second-order substitutes that are produced by a sequence-aware sentence completion model. We experimented with three tasks that aim to test the modelling of emerging concepts. We found that these tasks show different emphasis on first and second order contexts, and our substitute-based method achieves superior performance on naturally-occurring contexts from corpora.</abstract>
      <url hash="33028942">S19-1007</url>
      <doi>10.18653/v1/S19-1007</doi>
      <bibkey>liu-etal-2019-second</bibkey>
    </paper>
    <paper id="8">
      <title>Pre-trained Contextualized Character Embeddings Lead to Major Improvements in Time Normalization: a Detailed Analysis</title>
      <author><first>Dongfang</first><last>Xu</last></author>
      <author><first>Egoitz</first><last>Laparra</last></author>
      <author><first>Steven</first><last>Bethard</last></author>
      <pages>68&#8211;74</pages>
      <abstract>Recent studies have shown that pre-trained contextual word embeddings, which assign the same word different vectors in different contexts, improve performance in many tasks. But while contextual embeddings can also be trained at the character level, the effectiveness of such embeddings has not been studied. We derive character-level contextual embeddings from Flair (Akbik et al., 2018), and apply them to a time normalization task, yielding major performance improvements over the previous state-of-the-art: 51% error reduction in news and 33% in clinical notes. We analyze the sources of these improvements, and find that pre-trained contextual character embeddings are more robust to term variations, infrequent terms, and cross-domain changes. We also quantify the size of context that pre-trained contextual character embeddings take advantage of, and show that such embeddings capture features like part-of-speech and capitalization.</abstract>
      <url hash="12f5adfe">S19-1008</url>
      <doi>10.18653/v1/S19-1008</doi>
      <bibkey>xu-etal-2019-pre</bibkey>
    </paper>
    <paper id="9">
      <title><fixed-case>B</fixed-case>ot2<fixed-case>V</fixed-case>ec: Learning Representations of Chatbots</title>
      <author><first>Jonathan</first><last>Herzig</last></author>
      <author><first>Tommy</first><last>Sandbank</last></author>
      <author><first>Michal</first><last>Shmueli-Scheuer</last></author>
      <author><first>David</first><last>Konopnicki</last></author>
      <pages>75&#8211;84</pages>
      <abstract>Chatbots (i.e., bots) are becoming widely used in multiple domains, along with supporting bot programming platforms. These platforms are equipped with novel testing tools aimed at improving the quality of individual chatbots. Doing so requires an understanding of what sort of bots are being built (captured by their underlying conversation graphs) and how well they perform (derived through analysis of conversation logs). In this paper, we propose a new model, Bot2Vec, that embeds bots to a compact representation based on their structure and usage logs. Then, we utilize Bot2Vec representations to improve the quality of two bot analysis tasks. Using conversation data and graphs of over than 90 bots, we show that Bot2Vec representations improve detection performance by more than 16% for both tasks.</abstract>
      <url hash="20055270">S19-1009</url>
      <doi>10.18653/v1/S19-1009</doi>
      <bibkey>herzig-etal-2019-bot2vec</bibkey>
    </paper>
    <paper id="11">
      <title>A Semantic Cover Approach for Topic Modeling</title>
      <author><first>Rajagopal</first><last>Venkatesaramani</last></author>
      <author><first>Doug</first><last>Downey</last></author>
      <author><first>Bradley</first><last>Malin</last></author>
      <author><first>Yevgeniy</first><last>Vorobeychik</last></author>
      <pages>92&#8211;102</pages>
      <abstract>We introduce a novel topic modeling approach based on constructing a semantic set cover for clusters of similar documents. Specifically, our approach first clusters documents using their Tf-Idf representation, and then covers each cluster with a set of topic words based on semantic similarity, defined in terms of a word embedding. Computing a topic cover amounts to solving a minimum set cover problem. Our evaluation compares our topic modeling approach to Latent Dirichlet Allocation (LDA) on three metrics: 1) qualitative topic match, measured using evaluations by Amazon Mechanical Turk (MTurk) workers, 2) performance on classification tasks using each topic model as a sparse feature representation, and 3) topic coherence. We find that qualitative judgments significantly favor our approach, the method outperforms LDA on topic coherence, and is comparable to LDA on document classification tasks.</abstract>
      <url hash="27db580a">S19-1011</url>
      <doi>10.18653/v1/S19-1011</doi>
      <bibkey>venkatesaramani-etal-2019-semantic</bibkey>
    </paper>
    <paper id="12">
      <title><fixed-case>MCS</fixed-case>cript2.0: A Machine Comprehension Corpus Focused on Script Events and Participants</title>
      <author><first>Simon</first><last>Ostermann</last></author>
      <author><first>Michael</first><last>Roth</last></author>
      <author><first>Manfred</first><last>Pinkal</last></author>
      <pages>103&#8211;117</pages>
      <abstract>We introduce MCScript2.0, a machine comprehension corpus for the end-to-end evaluation of script knowledge. MCScript2.0 contains approx. 20,000 questions on approx. 3,500 texts, crowdsourced based on a new collection process that results in challenging questions. Half of the questions cannot be answered from the reading texts, but require the use of commonsense and, in particular, script knowledge. We give a thorough analysis of our corpus and show that while the task is not challenging to humans, existing machine comprehension models fail to perform well on the data, even if they make use of a commonsense knowledge base. The dataset is available at http://www.sfb1102. uni-saarland.de/?page_id=2582</abstract>
      <url hash="7ca6a86e">S19-1012</url>
      <doi>10.18653/v1/S19-1012</doi>
      <bibkey>ostermann-etal-2019-mcscript2</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/conceptnet">ConceptNet</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/mcscript">MCScript</pwcdataset>
    </paper>
    <paper id="13">
      <title>Deconstructing multimodality: visual properties and visual context in human semantic processing</title>
      <author><first>Christopher</first><last>Davis</last></author>
      <author><first>Luana</first><last>Bulat</last></author>
      <author><first>Anita Lilla</first><last>Vero</last></author>
      <author><first>Ekaterina</first><last>Shutova</last></author>
      <pages>118&#8211;124</pages>
      <abstract>Multimodal semantic models that extend linguistic representations with additional perceptual input have proved successful in a range of natural language processing (NLP) tasks. Recent research has successfully used neural methods to automatically create visual representations for words. However, these works have extracted visual features from complete images, and have not examined how different kinds of visual information impact performance. In contrast, we construct multimodal models that differentiate between internal visual properties of the objects and their external visual context. We evaluate the models on the task of decoding brain activity associated with the meanings of nouns, demonstrating their advantage over those based on complete images.</abstract>
      <url hash="196a7bc7">S19-1013</url>
      <doi>10.18653/v1/S19-1013</doi>
      <bibkey>davis-etal-2019-deconstructing</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/imagenet">ImageNet</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/visual-genome">Visual Genome</pwcdataset>
    </paper>
    <paper id="15">
      <title>Neural User Factor Adaptation for Text Classification: Learning to Generalize Across Author Demographics</title>
      <author><first>Xiaolei</first><last>Huang</last></author>
      <author><first>Michael J.</first><last>Paul</last></author>
      <pages>136&#8211;146</pages>
      <abstract>Language use varies across different demographic factors, such as gender, age, and geographic location. However, most existing document classification methods ignore demographic variability. In this study, we examine empirically how text data can vary across four demographic factors: gender, age, country, and region. We propose a multitask neural model to account for demographic variations via adversarial training. In experiments on four English-language social media datasets, we find that classification performance improves when adapting for user factors.</abstract>
      <url hash="4eb7c418">S19-1015</url>
      <doi>10.18653/v1/S19-1015</doi>
      <bibkey>huang-paul-2019-neural</bibkey>
      <pwccode url="https://github.com/xiaoleihuang/NUFA" additional="false">xiaoleihuang/NUFA</pwccode>
    </paper>
    <paper id="16">
      <title>Abstract Graphs and Abstract Paths for Knowledge Graph Completion</title>
      <author><first>Vivi</first><last>Nastase</last></author>
      <author><first>Bhushan</first><last>Kotnis</last></author>
      <pages>147&#8211;157</pages>
      <abstract>Knowledge graphs, which provide numerous facts in a machine-friendly format, are incomplete. Information that we induce from such graphs &#8211; e.g. entity embeddings, relation representations or patterns &#8211; will be affected by the imbalance in the information captured in the graph &#8211; by biasing representations, or causing us to miss potential patterns. To partially compensate for this situation we describe a method for representing knowledge graphs that capture an intensional representation of the original extensional information. This representation is very compact, and it abstracts away from individual links, allowing us to find better path candidates, as shown by the results of link prediction using this information.</abstract>
      <url hash="486c5ef4">S19-1016</url>
      <doi>10.18653/v1/S19-1016</doi>
      <bibkey>nastase-kotnis-2019-abstract</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/nell">NELL</pwcdataset>
    </paper>
    <paper id="18">
      <title>Enthymemetic Conditionals</title>
      <author><first>Eimear</first><last>Maguire</last></author>
      <pages>168&#8211;177</pages>
      <abstract>To model conditionals in a way that reflects their acceptability, we must include some means of making judgements about whether antecedent and consequent are meaningfully related or not. Enthymemes are non-logical arguments which do not hold up by themselves, but are acceptable through their relation to a topos, an already-known general principle or pattern for reasoning. This paper uses enthymemes and topoi as a way to model the world-knowledge behind these judgements. In doing so, it provides a reformalisation (in TTR) of enthymemes and topoi as networks rather than functions, and information state update rules for conditionals.</abstract>
      <url hash="040ebad9">S19-1018</url>
      <doi>10.18653/v1/S19-1018</doi>
      <bibkey>maguire-2019-enthymemetic</bibkey>
    </paper>
    <paper id="19">
      <title>Acquiring Structured Temporal Representation via Crowdsourcing: A Feasibility Study</title>
      <author><first>Yuchen</first><last>Zhang</last></author>
      <author><first>Nianwen</first><last>Xue</last></author>
      <pages>178&#8211;185</pages>
      <abstract>Temporal Dependency Trees are a structured temporal representation that represents temporal relations among time expressions and events in a text as a dependency tree structure. Compared to traditional pair-wise temporal relation representations, temporal dependency trees facilitate efficient annotations, higher inter-annotator agreement, and efficient computations. However, annotations on temporal dependency trees so far have only been done by expert annotators, which is costly and time-consuming. In this paper, we introduce a method to crowdsource temporal dependency tree annotations, and show that this representation is intuitive and can be collected with high accuracy and agreement through crowdsourcing. We produce a corpus of temporal dependency trees, and present a baseline temporal dependency parser, trained and evaluated on this new corpus.</abstract>
      <url hash="ffc41e32">S19-1019</url>
      <doi>10.18653/v1/S19-1019</doi>
      <bibkey>zhang-xue-2019-acquiring</bibkey>
    </paper>
    <paper id="21">
      <title>Improving Generalization in Coreference Resolution via Adversarial Training</title>
      <author><first>Sanjay</first><last>Subramanian</last></author>
      <author><first>Dan</first><last>Roth</last></author>
      <pages>192&#8211;197</pages>
      <abstract>In order for coreference resolution systems to be useful in practice, they must be able to generalize to new text. In this work, we demonstrate that the performance of the state-of-the-art system decreases when the names of PER and GPE named entities in the CoNLL dataset are changed to names that do not occur in the training set. We use the technique of adversarial gradient-based training to retrain the state-of-the-art system and demonstrate that the retrained system achieves higher performance on the CoNLL dataset (both with and without the change of named entities) and the GAP dataset.</abstract>
      <url hash="ec76392c">S19-1021</url>
      <doi>10.18653/v1/S19-1021</doi>
      <bibkey>subramanian-roth-2019-improving</bibkey>
    </paper>
    <paper id="22">
      <title>Improving Human Needs Categorization of Events with Semantic Classification</title>
      <author><first>Haibo</first><last>Ding</last></author>
      <author><first>Ellen</first><last>Riloff</last></author>
      <author><first>Zhe</first><last>Feng</last></author>
      <pages>198&#8211;204</pages>
      <abstract>Human Needs categories have been used to characterize the reason why an affective event is positive or negative. For example, &#8220;I got the flu&#8221; and &#8220;I got fired&#8221; are both negative (undesirable) events, but getting the flu is a Health problem while getting fired is a Financial problem. Previous work created learning models to assign events to Human Needs categories based on their words and contexts. In this paper, we introduce an intermediate step that assigns words to relevant semantic concepts. We create lightly supervised models that learn to label words with respect to 10 semantic concepts associated with Human Needs categories, and incorporate these labels as features for event categorization. Our results show that recognizing relevant semantic concepts improves both the recall and precision of Human Needs categorization for events.</abstract>
      <url hash="69a87a25">S19-1022</url>
      <doi>10.18653/v1/S19-1022</doi>
      <bibkey>ding-etal-2019-improving</bibkey>
    </paper>
    <paper id="24">
      <title>Automatic Accuracy Prediction for <fixed-case>AMR</fixed-case> Parsing</title>
      <author><first>Juri</first><last>Opitz</last></author>
      <author><first>Anette</first><last>Frank</last></author>
      <pages>212&#8211;223</pages>
      <abstract>Abstract Meaning Representation (AMR) represents sentences as directed, acyclic and rooted graphs, aiming at capturing their meaning in a machine readable format. AMR parsing converts natural language sentences into such graphs. However, evaluating a parser on new data by means of comparison to manually created AMR graphs is very costly. Also, we would like to be able to detect parses of questionable quality, or preferring results of alternative systems by selecting the ones for which we can assess good quality. We propose AMR accuracy prediction as the task of predicting several metrics of correctness for an automatically generated AMR parse &#8211; in absence of the corresponding gold parse. We develop a neural end-to-end multi-output regression model and perform three case studies: firstly, we evaluate the model&#8217;s capacity of predicting AMR parse accuracies and test whether it can reliably assign high scores to gold parses. Secondly, we perform parse selection based on predicted parse accuracies of candidate parses from alternative systems, with the aim of improving overall results. Finally, we predict system ranks for submissions from two AMR shared tasks on the basis of their predicted parse accuracy averages. All experiments are carried out across two different domains and show that our method is effective.</abstract>
      <url hash="899db651">S19-1024</url>
      <doi>10.18653/v1/S19-1024</doi>
      <bibkey>opitz-frank-2019-automatic</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/bio">Bio</pwcdataset>
    </paper>
    <paper id="25">
      <title>An Argument-Marker Model for Syntax-Agnostic Proto-Role Labeling</title>
      <author><first>Juri</first><last>Opitz</last></author>
      <author><first>Anette</first><last>Frank</last></author>
      <pages>224&#8211;234</pages>
      <abstract>Semantic proto-role labeling (SPRL) is an alternative to semantic role labeling (SRL) that moves beyond a categorical definition of roles, following Dowty&#8217;s feature-based view of proto-roles. This theory determines agenthood vs. patienthood based on a participant&#8217;s instantiation of more or less typical agent vs. patient properties, such as, for example, volition in an event. To perform SPRL, we develop an ensemble of hierarchical models with self-attention and concurrently learned predicate-argument markers. Our method is competitive with the state-of-the art, overall outperforming previous work in two formulations of the task (multi-label and multi-variate Likert scale pre- diction). In contrast to previous work, our results do not depend on gold argument heads derived from supplementary gold tree banks.</abstract>
      <url hash="bb5ee966">S19-1025</url>
      <doi>10.18653/v1/S19-1025</doi>
      <bibkey>opitz-frank-2019-argument</bibkey>
    </paper>
    <paper id="29">
      <title><fixed-case>B</fixed-case>ayesian Inference Semantics: A Modelling System and A Test Suite</title>
      <author><first>Jean-Philippe</first><last>Bernardy</last></author>
      <author><first>Rasmus</first><last>Blanck</last></author>
      <author><first>Stergios</first><last>Chatzikyriakidis</last></author>
      <author><first>Shalom</first><last>Lappin</last></author>
      <author><first>Aleksandre</first><last>Maskharashvili</last></author>
      <pages>263&#8211;272</pages>
      <abstract>We present BIS, a Bayesian Inference Semantics, for probabilistic reasoning in natural language. The current system is based on the framework of Bernardy et al. (2018), but departs from it in important respects. BIS makes use of Bayesian learning for inferring a hypothesis from premises. This involves estimating the probability of the hypothesis, given the data supplied by the premises of an argument. It uses a syntactic parser to generate typed syntactic structures that serve as input to a model generation system. Sentences are interpreted compositionally to probabilistic programs, and the corresponding truth values are estimated using sampling methods. BIS successfully deals with various probabilistic semantic phenomena, including frequency adverbs, generalised quantifiers, generics, and vague predicates. It performs well on a number of interesting probabilistic reasoning tasks. It also sustains most classically valid inferences (instantiation, de Morgan&#8217;s laws, etc.). To test BIS we have built an experimental test suite with examples of a range of probabilistic and classical inference patterns.</abstract>
      <url hash="6d97b949">S19-1029</url>
      <doi>10.18653/v1/S19-1029</doi>
      <bibkey>bernardy-etal-2019-bayesian</bibkey>
      <pwccode url="https://github.com/GU-CLASP/bbclm2019" additional="false">GU-CLASP/bbclm2019</pwccode>
    </paper>
    <paper id="31">
      <title>Incivility Detection in Online Comments</title>
      <author><first>Farig</first><last>Sadeque</last></author>
      <author><first>Stephen</first><last>Rains</last></author>
      <author><first>Yotam</first><last>Shmargad</last></author>
      <author><first>Kate</first><last>Kenski</last></author>
      <author><first>Kevin</first><last>Coe</last></author>
      <author><first>Steven</first><last>Bethard</last></author>
      <pages>283&#8211;291</pages>
      <abstract>Incivility in public discourse has been a major concern in recent times as it can affect the quality and tenacity of the discourse negatively. In this paper, we present neural models that can learn to detect name-calling and vulgarity from a newspaper comment section. We show that in contrast to prior work on detecting toxic language, fine-grained incivilities like namecalling cannot be accurately detected by simple models like logistic regression. We apply the models trained on the newspaper comments data to detect uncivil comments in a Russian troll dataset, and find that despite the change of domain, the model makes accurate predictions.</abstract>
      <url hash="1303b586">S19-1031</url>
      <doi>10.18653/v1/S19-1031</doi>
      <bibkey>sadeque-etal-2019-incivility</bibkey>
    </paper>
    <paper id="32">
      <title>Generating Animations from Screenplays</title>
      <author><first>Yeyao</first><last>Zhang</last></author>
      <author><first>Eleftheria</first><last>Tsipidi</last></author>
      <author><first>Sasha</first><last>Schriber</last></author>
      <author><first>Mubbasir</first><last>Kapadia</last></author>
      <author><first>Markus</first><last>Gross</last></author>
      <author><first>Ashutosh</first><last>Modi</last></author>
      <pages>292&#8211;307</pages>
      <abstract>Automatically generating animation from natural language text finds application in a number of areas e.g. movie script writing, instructional videos, and public safety. However, translating natural language text into animation is a challenging task. Existing text-to-animation systems can handle only very simple sentences, which limits their applications. In this paper, we develop a text-to-animation system which is capable of handling complex sentences. We achieve this by introducing a text simplification step into the process. Building on an existing animation generation system for screenwriting, we create a robust NLP pipeline to extract information from screenplays and map them to the system&#8217;s knowledge base. We develop a set of linguistic transformation rules that simplify complex sentences. Information extracted from the simplified sentences is used to generate a rough storyboard and video depicting the text. Our sentence simplification module outperforms existing systems in terms of BLEU and SARI metrics.We further evaluated our system via a user study: 68% participants believe that our system generates reasonable animation from input screenplays.</abstract>
      <url hash="d2d97949">S19-1032</url>
      <doi>10.18653/v1/S19-1032</doi>
      <bibkey>zhang-etal-2019-generating</bibkey>
    </paper>
  </volume>
  <volume id="2">
    <meta>
      <booktitle>Proceedings of the 13th International Workshop on Semantic Evaluation</booktitle>
      <url hash="c6884df0">S19-2</url>
      <editor><first>Jonathan</first><last>May</last></editor>
      <editor><first>Ekaterina</first><last>Shutova</last></editor>
      <editor><first>Aurelie</first><last>Herbelot</last></editor>
      <editor><first>Xiaodan</first><last>Zhu</last></editor>
      <editor><first>Marianna</first><last>Apidianaki</last></editor>
      <editor><first>Saif M.</first><last>Mohammad</last></editor>
      <publisher>Association for Computational Linguistics</publisher>
      <address>Minneapolis, Minnesota, USA</address>
      <month>June</month>
      <year>2019</year>
    </meta>
    <frontmatter>
      <url hash="8fc0fb1a">S19-2000</url>
      <bibkey>semeval-2019-international</bibkey>
    </frontmatter>
    <paper id="1">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 1: Cross-lingual Semantic Parsing with <fixed-case>UCCA</fixed-case></title>
      <author><first>Daniel</first><last>Hershcovich</last></author>
      <author><first>Zohar</first><last>Aizenbud</last></author>
      <author><first>Leshem</first><last>Choshen</last></author>
      <author><first>Elior</first><last>Sulem</last></author>
      <author><first>Ari</first><last>Rappoport</last></author>
      <author><first>Omri</first><last>Abend</last></author>
      <pages>1&#8211;10</pages>
      <abstract>We present the SemEval 2019 shared task on Universal Conceptual Cognitive Annotation (UCCA) parsing in English, German and French, and discuss the participating systems and results. UCCA is a cross-linguistically applicable framework for semantic representation, which builds on extensive typological work and supports rapid annotation. UCCA poses a challenge for existing parsing techniques, as it exhibits reentrancy (resulting in DAG structures), discontinuous structures and non-terminal nodes corresponding to complex semantic units. The shared task has yielded improvements over the state-of-the-art baseline in all languages and settings. Full results can be found in the task&#8217;s website <url>https://competitions.codalab.org/competitions/19160</url>.</abstract>
      <url hash="73466e5e">S19-2001</url>
      <attachment type="presentation" hash="bcbfd565">S19-2001.Presentation.pdf</attachment>
      <doi>10.18653/v1/S19-2001</doi>
      <revision id="1" href="S19-2001v1" hash="800901b3" />
      <revision id="2" href="S19-2001v2" hash="73466e5e" date="2020-07-07">Content update to reflect a disqualified participant.</revision>
      <bibkey>hershcovich-etal-2019-semeval</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/universal-dependencies">Universal Dependencies</pwcdataset>
    </paper>
    <paper id="6">
      <title><fixed-case>ANA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Contextual Emotion detection in Conversations through hierarchical <fixed-case>LSTM</fixed-case>s and <fixed-case>BERT</fixed-case></title>
      <author><first>Chenyang</first><last>Huang</last></author>
      <author><first>Amine</first><last>Trabelsi</last></author>
      <author><first>Osmar</first><last>Za&#239;ane</last></author>
      <pages>49&#8211;53</pages>
      <abstract>This paper describes the system submitted by ANA Team for the SemEval-2019 Task 3: EmoContext. We propose a novel Hierarchi- cal LSTMs for Contextual Emotion Detection (HRLCE) model. It classifies the emotion of an utterance given its conversational con- text. The results show that, in this task, our HRCLE outperforms the most recent state-of- the-art text classification framework: BERT. We combine the results generated by BERT and HRCLE to achieve an overall score of 0.7709 which ranked 5th on the final leader board of the competition among 165 Teams.</abstract>
      <url hash="8c794dd4">S19-2006</url>
      <doi>10.18653/v1/S19-2006</doi>
      <bibkey>huang-etal-2019-ana</bibkey>
      <pwccode url="https://github.com/chenyangh/SemEval2019Task3" additional="false">chenyangh/SemEval2019Task3</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="7">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Multilingual Detection of Hate Speech Against Immigrants and Women in <fixed-case>T</fixed-case>witter</title>
      <author><first>Valerio</first><last>Basile</last></author>
      <author><first>Cristina</first><last>Bosco</last></author>
      <author><first>Elisabetta</first><last>Fersini</last></author>
      <author><first>Debora</first><last>Nozza</last></author>
      <author><first>Viviana</first><last>Patti</last></author>
      <author><first>Francisco Manuel</first><last>Rangel Pardo</last></author>
      <author><first>Paolo</first><last>Rosso</last></author>
      <author><first>Manuela</first><last>Sanguinetti</last></author>
      <pages>54&#8211;63</pages>
      <abstract>The paper describes the organization of the SemEval 2019 Task 5 about the detection of hate speech against immigrants and women in Spanish and English messages extracted from Twitter. The task is organized in two related classification subtasks: a main binary subtask for detecting the presence of hate speech, and a finer-grained one devoted to identifying further features in hateful contents such as the aggressive attitude and the target harassed, to distinguish if the incitement is against an individual rather than a group. HatEval has been one of the most popular tasks in SemEval-2019 with a total of 108 submitted runs for Subtask A and 70 runs for Subtask B, from a total of 74 different teams. Data provided for the task are described by showing how they have been collected and annotated. Moreover, the paper provides an analysis and discussion about the participant systems and the results they achieved in both subtasks.</abstract>
      <url hash="fb60c578">S19-2007</url>
      <doi>10.18653/v1/S19-2007</doi>
      <bibkey>basile-etal-2019-semeval</bibkey>
    </paper>
    <paper id="10">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Identifying and Categorizing Offensive Language in Social Media (<fixed-case>O</fixed-case>ffens<fixed-case>E</fixed-case>val)</title>
      <author><first>Marcos</first><last>Zampieri</last></author>
      <author><first>Shervin</first><last>Malmasi</last></author>
      <author><first>Preslav</first><last>Nakov</last></author>
      <author><first>Sara</first><last>Rosenthal</last></author>
      <author><first>Noura</first><last>Farra</last></author>
      <author><first>Ritesh</first><last>Kumar</last></author>
      <pages>75&#8211;86</pages>
      <abstract>We present the results and the main findings of SemEval-2019 Task 6 on Identifying and Categorizing Offensive Language in Social Media (OffensEval). The task was based on a new dataset, the Offensive Language Identification Dataset (OLID), which contains over 14,000 English tweets, and it featured three sub-tasks. In sub-task A, systems were asked to discriminate between offensive and non-offensive posts. In sub-task B, systems had to identify the type of offensive content in the post. Finally, in sub-task C, systems had to detect the target of the offensive posts. OffensEval attracted a large number of participants and it was one of the most popular tasks in SemEval-2019. In total, nearly 800 teams signed up to participate in the task and 115 of them submitted results, which are presented and analyzed in this report.</abstract>
      <url hash="752ced44">S19-2010</url>
      <doi>10.18653/v1/S19-2010</doi>
      <bibkey>zampieri-etal-2019-semeval</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="13">
      <title><fixed-case>DANGNT</fixed-case>@<fixed-case>UIT</fixed-case>.<fixed-case>VNU</fixed-case>-<fixed-case>HCM</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val 2019 Task 1: Graph Transformation System from <fixed-case>S</fixed-case>tanford Basic Dependencies to <fixed-case>U</fixed-case>niversal <fixed-case>C</fixed-case>onceptual <fixed-case>C</fixed-case>ognitive <fixed-case>A</fixed-case>nnotation (<fixed-case>UCCA</fixed-case>)</title>
      <author><first>Dang</first><last>Tuan Nguyen</last></author>
      <author><first>Trung</first><last>Tran</last></author>
      <pages>97&#8211;101</pages>
      <abstract>This paper describes the graph transfor-mation system (GT System) for SemEval 2019 Task 1: Cross-lingual Semantic Parsing with Universal Conceptual Cognitive Annotation (UCCA)1. The input of GT System is a pair of text and its unannotated xml, which is a layer 0 part of UCCA form. The output of GT System is the corresponding full UCCA xml. Based on the idea of graph illustration and transformation, we perform four main tasks when building GT System. At the first task, we illustrate the graph form of stanford dependencies2 of input text. We then transform into an intermediate graph in the second task. At the third task, we continue to transform into ouput graph form. Finally, we create the output UCCA xml. The evaluation results show that our method generates good-quality UCCA xml and has a meaningful contribution to the semantic represetation sub-field in Natural Language Processing.</abstract>
      <url hash="c80dfdfd">S19-2013</url>
      <doi>10.18653/v1/S19-2013</doi>
      <bibkey>tuan-nguyen-tran-2019-dangnt</bibkey>
    </paper>
    <paper id="15">
      <title><fixed-case>M</fixed-case>ask<fixed-case>P</fixed-case>arse@Deskin at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 1: Cross-lingual <fixed-case>UCCA</fixed-case> Semantic Parsing using Recursive Masked Sequence Tagging</title>
      <author><first>Gabriel</first><last>Marzinotto</last></author>
      <author><first>Johannes</first><last>Heinecke</last></author>
      <author><first>G&#233;raldine</first><last>Damnati</last></author>
      <pages>107&#8211;112</pages>
      <abstract>This paper describes our recursive system for SemEval-2019 Task 1: Cross-lingual Semantic Parsing with UCCA. Each recursive step consists of two parts. We first perform semantic parsing using a sequence tagger to estimate the probabilities of the UCCA categories in the sentence. Then, we apply a decoding policy which interprets these probabilities and builds the graph nodes. Parsing is done recursively, we perform a first inference on the sentence to extract the main scenes and links and then we recursively apply our model on the sentence using a masking features that reflects the decisions made in previous steps. Process continues until the terminal nodes are reached. We chose a standard neural tagger and we focus on our recursive parsing strategy and on the cross lingual transfer problem to develop a robust model for the French language, using only few training samples</abstract>
      <url hash="14b9d317">S19-2015</url>
      <doi>10.18653/v1/S19-2015</doi>
      <bibkey>marzinotto-etal-2019-maskparse</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/bio">Bio</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/framenet">FrameNet</pwcdataset>
    </paper>
    <paper id="17">
      <title><fixed-case>UC</fixed-case> <fixed-case>D</fixed-case>avis at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 1: <fixed-case>DAG</fixed-case> Semantic Parsing with Attention-based Decoder</title>
      <author><first>Dian</first><last>Yu</last></author>
      <author><first>Kenji</first><last>Sagae</last></author>
      <pages>119&#8211;124</pages>
      <abstract>We present an encoder-decoder model for semantic parsing with UCCA SemEval 2019 Task 1. The encoder is a Bi-LSTM and the decoder uses recursive self-attention. The proposed model alleviates challenges and feature engineering in traditional transition-based and graph-based parsers. The resulting parser is simple and proved to effective on the semantic parsing task.</abstract>
      <url hash="e84d7927">S19-2017</url>
      <doi>10.18653/v1/S19-2017</doi>
      <bibkey>yu-sagae-2019-uc</bibkey>
    </paper>
    <paper id="20">
      <title><fixed-case>B</fixed-case>rain<fixed-case>EE</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Ensembling Linear Classifiers for Emotion Prediction</title>
      <author><first>Vachagan</first><last>Gratian</last></author>
      <pages>137&#8211;141</pages>
      <abstract>The paper describes an ensemble of linear perceptrons trained for emotion classification as part of the SemEval-2019 shared-task 3. The model uses a matrix of probabilities to weight the activations of the base-classifiers and makes a final prediction using the sum rule. The base-classifiers are multi-class perceptrons utilizing character and word n-grams, part-of-speech tags and sentiment polarity scores. The results of our experiments indicate that the ensemble outperforms the base-classifiers, but only marginally. In the best scenario our model attains an F-Micro score of 0.672, whereas the base-classifiers attained scores ranging from 0.636 to 0.666.</abstract>
      <url hash="e5618f72">S19-2020</url>
      <doi>10.18653/v1/S19-2020</doi>
      <bibkey>gratian-2019-brainee</bibkey>
    </paper>
    <paper id="21">
      <title><fixed-case>CA</fixed-case>i<fixed-case>RE</fixed-case>_<fixed-case>HKUST</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Hierarchical Attention for Dialogue Emotion Classification</title>
      <author><first>Genta Indra</first><last>Winata</last></author>
      <author><first>Andrea</first><last>Madotto</last></author>
      <author><first>Zhaojiang</first><last>Lin</last></author>
      <author><first>Jamin</first><last>Shin</last></author>
      <author><first>Yan</first><last>Xu</last></author>
      <author><first>Peng</first><last>Xu</last></author>
      <author><first>Pascale</first><last>Fung</last></author>
      <pages>142&#8211;147</pages>
      <abstract>Detecting emotion from dialogue is a challenge that has not yet been extensively surveyed. One could consider the emotion of each dialogue turn to be independent, but in this paper, we introduce a hierarchical approach to classify emotion, hypothesizing that the current emotional state depends on previous latent emotions. We benchmark several feature-based classifiers using pre-trained word and emotion embeddings, state-of-the-art end-to-end neural network models, and Gaussian processes for automatic hyper-parameter search. In our experiments, hierarchical architectures consistently give significant improvements, and our best model achieves a 76.77% F1-score on the test set.</abstract>
      <url hash="e115bd37">S19-2021</url>
      <revision id="1" href="S19-2021v1" hash="5238764f" />
      <revision id="2" href="S19-2021v2" hash="e115bd37">We corrected a reference by adding a booktitle to fix the bibliography.Before: Pascale Fung, Dario Bertero, Peng Xu, Ji Ho Park, Chien-Sheng Wu, and Andrea Madotto. 2018. Empathetic dialog systems.After: Pascale Fung, Dario Bertero, Peng Xu, Ji Ho Park, Chien-Sheng Wu, and Andrea Madotto. 2018. Empathetic dialog systems. In The International Conference on Language Resources and Evaluation. European Language Resources Association.</revision>
      <doi>10.18653/v1/S19-2021</doi>
      <bibkey>winata-etal-2019-caire</bibkey>
    </paper>
    <paper id="23">
      <title><fixed-case>CL</fixed-case>a<fixed-case>C</fixed-case> Lab at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Contextual Emotion Detection Using a Combination of Neural Networks and <fixed-case>SVM</fixed-case></title>
      <author><first>Elham</first><last>Mohammadi</last></author>
      <author><first>Hessam</first><last>Amini</last></author>
      <author><first>Leila</first><last>Kosseim</last></author>
      <pages>153&#8211;158</pages>
      <abstract>This paper describes our system at SemEval 2019, Task 3 (EmoContext), which focused on the contextual detection of emotions in a dataset of 3-round dialogues. For our final system, we used a neural network with pretrained ELMo word embeddings and POS tags as input, GRUs as hidden units, an attention mechanism to capture representations of the dialogues, and an SVM classifier which used the learned network representations to perform the task of multi-class classification.This system yielded a micro-averaged F1 score of 0.7072 for the three emotion classes, improving the baseline by approximately 12%.</abstract>
      <url hash="0410d267">S19-2023</url>
      <doi>10.18653/v1/S19-2023</doi>
      <bibkey>mohammadi-etal-2019-clac</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="24">
      <title><fixed-case>CLARK</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Exploring the Role of Context to Identify Emotion in a Short Conversation</title>
      <author><first>Joseph</first><last>Cummings</last></author>
      <author><first>Jason</first><last>Wilson</last></author>
      <pages>159&#8211;163</pages>
      <abstract>With text lacking valuable information avail-able in other modalities, context may provide useful information to better detect emotions. In this paper, we do a systematic exploration of the role of context in recognizing emotion in a conversation. We use a Naive Bayes model to show that inferring the mood of the conversation before classifying individual utterances leads to better performance. Additionally, we find that using context while train-ing the model significantly decreases performance. Our approach has the additional bene-fit that its performance rivals a baseline LSTM model while requiring fewer resources.</abstract>
      <url hash="7793352c">S19-2024</url>
      <doi>10.18653/v1/S19-2024</doi>
      <bibkey>cummings-wilson-2019-clark</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="26">
      <title><fixed-case>C</fixed-case>o<fixed-case>AS</fixed-case>ta<fixed-case>L</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Affect Classification in Dialogue using Attentive <fixed-case>B</fixed-case>i<fixed-case>LSTM</fixed-case>s</title>
      <author><first>Ana Valeria</first><last>Gonz&#225;lez</last></author>
      <author><first>Victor</first><last>Petr&#233;n Bach Hansen</last></author>
      <author><first>Joachim</first><last>Bingel</last></author>
      <author><first>Anders</first><last>S&#248;gaard</last></author>
      <pages>169&#8211;174</pages>
      <abstract>This work describes the system presented by the CoAStaL Natural Language Processing group at University of Copenhagen. The main system we present uses the same attention mechanism presented in (Yang et al., 2016). Our overall model architecture is also inspired by their hierarchical classification model and adapted to deal with classification in dialogue by encoding information at the turn level. We use different encodings for each turn to create a more expressive representation of dialogue context which is then fed into our classifier.We also define a custom preprocessing step in order to deal with language commonly used in interactions across many social media outlets. Our proposed system achieves a micro F1 score of 0.7340 on the test set and shows significant gains in performance compared to a system using dialogue level encoding.</abstract>
      <url hash="a92b0b56">S19-2026</url>
      <revision id="1" href="S19-2026v1" hash="dcce302d" />
      <revision id="2" href="S19-2026v2" hash="a92b0b56">No description of the changes were recorded.</revision>
      <doi>10.18653/v1/S19-2026</doi>
      <bibkey>gonzalez-etal-2019-coastal</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="28">
      <title><fixed-case>CX</fixed-case>-<fixed-case>ST</fixed-case>-<fixed-case>RNM</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Fusion of Recurrent Neural Networks Based on Contextualized and Static Word Representations for Contextual Emotion Detection</title>
      <author><first>Micha&#322;</first><last>Pere&#322;kiewicz</last></author>
      <pages>180&#8211;184</pages>
      <abstract>In this paper, I describe a fusion model combining contextualized and static word representations for approaching the EmoContext task in the SemEval 2019 competition. The model is based on two Recurrent Neural Networks, the first one is fed with a state-of-the-art ELMo deep contextualized word representation and the second one is fed with a static Word2Vec embedding augmented with 10-dimensional affective word feature vector. The proposed model is compared with two baseline models based on a static word representation and a contextualized word representation, separately. My approach achieved officially 0.7278 microaveraged F1 score on the test dataset, ranking 47th out of 165 participants.</abstract>
      <url hash="3b122af4">S19-2028</url>
      <doi>10.18653/v1/S19-2028</doi>
      <bibkey>perelkiewicz-2019-cx</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="30">
      <title><fixed-case>E</fixed-case>-<fixed-case>LSTM</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Semantic and Sentimental Features Retention for Emotion Detection in Text</title>
      <author><first>Harsh</first><last>Patel</last></author>
      <pages>190&#8211;194</pages>
      <abstract>This paper discusses the solution to the problem statement of the SemEval19: EmoContext competition which is &#8221;Contextual Emotion Detection in Texts&#8221;. The paper includes the explanation of an architecture that I created by exploiting the embedding layers of Word2Vec and GloVe using LSTMs as memory unit cells which detects approximate emotion of chats between two people in the English language provided in the textual form. The set of emotions on which the model was trained was Happy, Sad, Angry and Others. The paper also includes an analysis of different conventional machine learning algorithms in comparison to E-LSTM.</abstract>
      <url hash="2a9e70cf">S19-2030</url>
      <doi>10.18653/v1/S19-2030</doi>
      <bibkey>patel-2019-e</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="31">
      <title><fixed-case>EL</fixed-case>i<fixed-case>RF</fixed-case>-<fixed-case>UPV</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Snapshot Ensemble of Hierarchical Convolutional Neural Networks for Contextual Emotion Detection</title>
      <author><first>Jos&#233;-&#193;ngel</first><last>Gonz&#225;lez</last></author>
      <author><first>Llu&#237;s-F.</first><last>Hurtado</last></author>
      <author><first>Ferran</first><last>Pla</last></author>
      <pages>195&#8211;199</pages>
      <abstract>This paper describes the approach developed by the ELiRF-UPV team at SemEval 2019 Task 3: Contextual Emotion Detection in Text. We have developed a Snapshot Ensemble of 1D Hierarchical Convolutional Neural Networks to extract features from 3-turn conversations in order to perform contextual emotion detection in text. This Snapshot Ensemble is obtained by averaging the models selected by a Genetic Algorithm that optimizes the evaluation measure. The proposed ensemble obtains better results than a single model and it obtains competitive and promising results on Contextual Emotion Detection in Text.</abstract>
      <url hash="bc7fa2a2">S19-2031</url>
      <doi>10.18653/v1/S19-2031</doi>
      <bibkey>gonzalez-etal-2019-elirf</bibkey>
    </paper>
    <paper id="35">
      <title><fixed-case>EPITA</fixed-case>-<fixed-case>ADAPT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Detecting emotions in textual conversations using deep learning models combination</title>
      <author><first>Abdessalam</first><last>Bouchekif</last></author>
      <author><first>Praveen</first><last>Joshi</last></author>
      <author><first>Latifa</first><last>Bouchekif</last></author>
      <author><first>Haithem</first><last>Afli</last></author>
      <pages>215&#8211;219</pages>
      <abstract>Messaging platforms like WhatsApp, Facebook Messenger and Twitter have gained recently much popularity owing to their ability in connecting users in real-time. The content of these textual messages can be a useful resource for text mining to discover and unhide various aspects, including emotions. In this paper we present our submission for SemEval 2019 task &#8216;EmoContext&#8217;. The task consists of classifying a given textual dialogue into one of four emotion classes: Angry, Happy, Sad and Others. Our proposed system is based on the combination of different deep neural networks techniques. In particular, we use Recurrent Neural Networks (LSTM, B-LSTM, GRU, B-GRU), Convolutional Neural Network (CNN) and Transfer Learning (TL) methodes. Our final system, achieves an F1 score of 74.51% on the subtask evaluation dataset.</abstract>
      <url hash="4b26a04a">S19-2035</url>
      <doi>10.18653/v1/S19-2035</doi>
      <bibkey>bouchekif-etal-2019-epita</bibkey>
    </paper>
    <paper id="36">
      <title>Figure Eight at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Ensemble of Transfer Learning Methods for Contextual Emotion Detection</title>
      <author><first>Joan</first><last>Xiao</last></author>
      <pages>220&#8211;224</pages>
      <abstract>This paper describes our transfer learning-based approach to contextual emotion detection as part of SemEval-2019 Task 3. We experiment with transfer learning using pre-trained language models (ULMFiT, OpenAI GPT, and BERT) and fine-tune them on this task. We also train a deep learning model from scratch using pre-trained word embeddings and BiLSTM architecture with attention mechanism. The ensembled model achieves competitive result, ranking ninth out of 165 teams. The result reveals that ULMFiT performs best due to its superior fine-tuning techniques. We propose improvements for future work.</abstract>
      <url hash="e67e7db3">S19-2036</url>
      <doi>10.18653/v1/S19-2036</doi>
      <bibkey>xiao-2019-figure</bibkey>
    </paper>
    <paper id="42">
      <title><fixed-case>LIRMM</fixed-case>-Advanse at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Attentive Conversation Modeling for Emotion Detection and Classification</title>
      <author><first>Waleed</first><last>Ragheb</last></author>
      <author><first>J&#233;r&#244;me</first><last>Az&#233;</last></author>
      <author><first>Sandra</first><last>Bringay</last></author>
      <author><first>Maximilien</first><last>Servajean</last></author>
      <pages>251&#8211;255</pages>
      <abstract>This paper addresses the problem of modeling textual conversations and detecting emotions. Our proposed model makes use of 1) deep transfer learning rather than the classical shallow methods of word embedding; 2) self-attention mechanisms to focus on the most important parts of the texts and 3) turn-based conversational modeling for classifying the emotions. The approach does not rely on any hand-crafted features or lexicons. Our model was evaluated on the data provided by the SemEval-2019 shared task on contextual emotion detection in text. The model shows very competitive results.</abstract>
      <url hash="06ee0a13">S19-2042</url>
      <doi>10.18653/v1/S19-2042</doi>
      <bibkey>ragheb-etal-2019-lirmm</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="44">
      <title><fixed-case>M</fixed-case>oon<fixed-case>G</fixed-case>rad at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Ensemble <fixed-case>B</fixed-case>i<fixed-case>RNN</fixed-case>s for Contextual Emotion Detection in Dialogues</title>
      <author><first>Chandrakant</first><last>Bothe</last></author>
      <author><first>Stefan</first><last>Wermter</last></author>
      <pages>261&#8211;265</pages>
      <abstract>When reading &#8220;I don&#8217;t want to talk to you any more&#8221;, we might interpret this as either an angry or a sad emotion in the absence of context. Often, the utterances are shorter, and given a short utterance like &#8220;Me too!&#8221;, it is difficult to interpret the emotion without context. The lack of prosodic or visual information makes it a challenging problem to detect such emotions only with text. However, using contextual information in the dialogue is gaining importance to provide a context-aware recognition of linguistic features such as emotion, dialogue act, sentiment etc. The SemEval 2019 Task 3 EmoContext competition provides a dataset of three-turn dialogues labeled with the three emotion classes, i.e. Happy, Sad and Angry, and in addition with Others as none of the aforementioned emotion classes. We develop an ensemble of the recurrent neural model with character- and word-level features as an input to solve this problem. The system performs quite well, achieving a microaveraged F1 score (F1&#956;) of 0.7212 for the three emotion classes.</abstract>
      <url hash="4641733c">S19-2044</url>
      <doi>10.18653/v1/S19-2044</doi>
      <bibkey>bothe-wermter-2019-moongrad</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="45">
      <title><fixed-case>NELEC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Think Twice Before Going Deep</title>
      <author><first>Parag</first><last>Agrawal</last></author>
      <author><first>Anshuman</first><last>Suri</last></author>
      <pages>266&#8211;271</pages>
      <abstract>Existing Machine Learning techniques yield close to human performance on text-based classification tasks. However, the presence of multi-modal noise in chat data such as emoticons, slang, spelling mistakes, code-mixed data, etc. makes existing deep-learning solutions perform poorly. The inability of deep-learning systems to robustly capture these covariates puts a cap on their performance. We propose NELEC: Neural and Lexical Combiner, a system which elegantly combines textual and deep-learning based methods for sentiment classification. We evaluate our system as part of the third task of &#8216;Contextual Emotion Detection in Text&#8217; as part of SemEval-2019. Our system performs significantly better than the baseline, as well as our deep-learning model benchmarks. It achieved a micro-averaged F1 score of 0.7765, ranking 3rd on the test-set leader-board. Our code is available at https://github.com/iamgroot42/nelec</abstract>
      <url hash="218c89ca">S19-2045</url>
      <doi>10.18653/v1/S19-2045</doi>
      <bibkey>agrawal-suri-2019-nelec</bibkey>
      <pwccode url="https://github.com/iamgroot42/nelec" additional="false">iamgroot42/nelec</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="47">
      <title><fixed-case>NTUA</fixed-case>-<fixed-case>ISL</fixed-case>ab at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Determining emotions in contextual conversations with deep learning</title>
      <author><first>Rolandos Alexandros</first><last>Potamias</last></author>
      <author><first>Georgios</first><last>Siolas</last></author>
      <pages>277&#8211;281</pages>
      <abstract>Sentiment analysis (SA) in texts is a well-studied Natural Language Processing task, which in nowadays gains popularity due to the explosion of social media, and the subsequent accumulation of huge amounts of related data. However, capturing emotional states and the sentiment polarity of written excerpts requires knowledge on the events triggering them. Towards this goal, we present a computational end-to-end context-aware SA methodology, which was competed in the context of the SemEval-2019 / EmoContext task (Task 3). The proposed system is founded on the combination of two neural architectures, a deep recurrent neural network, structured by an attentive Bidirectional LSTM, and a deep dense network (DNN). The system achieved 0.745 micro f1-score, and ranked 26/165 (top 20%) teams among the official task submissions.</abstract>
      <url hash="6fcf387c">S19-2047</url>
      <doi>10.18653/v1/S19-2047</doi>
      <bibkey>potamias-siolas-2019-ntua</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="49">
      <title><fixed-case>PKUSE</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Emotion Detection with Emotion-Oriented Neural Attention Network</title>
      <author><first>Luyao</first><last>Ma</last></author>
      <author><first>Long</first><last>Zhang</last></author>
      <author><first>Wei</first><last>Ye</last></author>
      <author><first>Wenhui</first><last>Hu</last></author>
      <pages>287&#8211;291</pages>
      <abstract>This paper presents the system in SemEval-2019 Task 3, &#8220;EmoContext: Contextual Emotion Detection in Text&#8221;. We propose a deep learning architecture with bidirectional LSTM networks, augmented with an emotion-oriented attention network that is capable of extracting emotion information from an utterance. Experimental results show that our model outperforms its variants and the baseline. Overall, this system has achieved 75.57% for the microaveraged F1 score.</abstract>
      <url hash="107cbe3c">S19-2049</url>
      <doi>10.18653/v1/S19-2049</doi>
      <bibkey>ma-etal-2019-pkuse</bibkey>
    </paper>
    <paper id="50">
      <title>Podlab at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: The Importance of Being Shallow</title>
      <author><first>Andrew</first><last>Nguyen</last></author>
      <author><first>Tobin</first><last>South</last></author>
      <author><first>Nigel</first><last>Bean</last></author>
      <author><first>Jonathan</first><last>Tuke</last></author>
      <author><first>Lewis</first><last>Mitchell</last></author>
      <pages>292&#8211;296</pages>
      <abstract>This paper describes our linear SVM system for emotion classification from conversational dialogue, entered in SemEval2019 Task 3. We used off-the-shelf tools coupled with feature engineering and parameter tuning to create a simple, interpretable, yet high-performing, classification model. Our system achieves a micro F1 score of 0.7357, which is 92% of the top score for the competition, demonstrating that &#8220;shallow&#8221; classification approaches can perform well when coupled with detailed fea- ture selection and statistical analysis.</abstract>
      <url hash="56101b03">S19-2050</url>
      <doi>10.18653/v1/S19-2050</doi>
      <bibkey>nguyen-etal-2019-podlab</bibkey>
    </paper>
    <paper id="51">
      <title><fixed-case>SCIA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Sentiment Analysis in Textual Conversations Using Deep Learning</title>
      <author><first>Zinedine</first><last>Rebiai</last></author>
      <author><first>Simon</first><last>Andersen</last></author>
      <author><first>Antoine</first><last>Debrenne</last></author>
      <author><first>Victor</first><last>Lafargue</last></author>
      <pages>297&#8211;301</pages>
      <abstract>In this paper we present our submission for SemEval-2019 Task 3: EmoContext. The task consisted of classifying a textual dialogue into one of four emotion classes: happy, sad, angry or others. Our approach tried to improve on multiple aspects, preprocessing with an emphasis on spell-checking and ensembling with four different models: Bi-directional contextual LSTM (BC-LSTM), categorical Bi-LSTM (CAT-LSTM), binary convolutional Bi-LSTM (BIN-LSTM) and Gated Recurrent Unit (GRU). On the leader-board, we submitted two systems that obtained a micro F1 score (F1&#956;) of 0.711 and 0.712. After the competition, we merged our two systems with ensembling, which achieved a F1&#956; of 0.7324 on the test dataset.</abstract>
      <url hash="e4fe256a">S19-2051</url>
      <doi>10.18653/v1/S19-2051</doi>
      <bibkey>rebiai-etal-2019-scia</bibkey>
    </paper>
    <paper id="52">
      <title>Sentim at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Convolutional Neural Networks For Sentiment in Conversations</title>
      <author><first>Jacob</first><last>Anderson</last></author>
      <pages>302&#8211;306</pages>
      <abstract>In this work convolutional neural networks were used in order to determine the sentiment in a conversational setting. This paper&#8217;s contributions include a method for handling any sized input and a method for breaking down the conversation into separate parts for easier processing. Finally, clustering was shown to improve results and that such a model for handling sentiment in conversations is both fast and accurate.</abstract>
      <url hash="697b23d3">S19-2052</url>
      <doi>10.18653/v1/S19-2052</doi>
      <bibkey>anderson-2019-sentim</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="58">
      <title><fixed-case>TDB</fixed-case>ot at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Context Aware Emotion Detection Using A Conditioned Classification Approach</title>
      <author><first>Sourabh</first><last>Maity</last></author>
      <pages>335&#8211;339</pages>
      <abstract>With the system description it is shown how to use the context information while detecting the emotion in a dialogue. Some guidelines about how to handle emojis was also laid out. While developing this system I realized the importance of pre-processing in conversational text data, or in general NLP related tasks; it can not be over emphasized.</abstract>
      <url hash="a6c337ff">S19-2058</url>
      <doi>10.18653/v1/S19-2058</doi>
      <bibkey>maity-2019-tdbot</bibkey>
    </paper>
    <paper id="60">
      <title><fixed-case>THU</fixed-case>-<fixed-case>HCSI</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Hierarchical Ensemble Classification of Contextual Emotion in Conversation</title>
      <author><first>Xihao</first><last>Liang</last></author>
      <author><first>Ye</first><last>Ma</last></author>
      <author><first>Mingxing</first><last>Xu</last></author>
      <pages>345&#8211;349</pages>
      <abstract>In this paper, we describe our hierarchical ensemble system designed for the SemEval-2019 task3, EmoContext. In our system, three sets of classifiers are trained for different sub-targets and the predicted labels of these base classifiers are combined through three steps of voting to make the final prediction. Effective details for developing base classifiers are highlighted.</abstract>
      <url hash="9ac0f968">S19-2060</url>
      <doi>10.18653/v1/S19-2060</doi>
      <bibkey>liang-etal-2019-thu</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="61">
      <title><fixed-case>T</fixed-case>okyo<fixed-case>T</fixed-case>ech_<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Emotion-related Symbols in Emotion Detection</title>
      <author><first>Zhishen</first><last>Yang</last></author>
      <author><first>Sam</first><last>Vijlbrief</last></author>
      <author><first>Naoaki</first><last>Okazaki</last></author>
      <pages>350&#8211;354</pages>
      <abstract>This paper presents our contextual emotion detection system in approaching the SemEval2019 shared task 3: EmoContext: Contextual Emotion Detection in Text. This system cooperates with an emotion detection neural network method (Poria et al., 2017), emoji2vec (Eisner et al., 2016) embedding, word2vec embedding (Mikolov et al., 2013), and our proposed emoticon and emoji preprocessing method. The experimental results demonstrate the usefulness of our emoticon and emoji prepossessing method, and representations of emoticons and emoji contribute model&#8217;s emotion detection.</abstract>
      <url hash="4c3af2ba">S19-2061</url>
      <doi>10.18653/v1/S19-2061</doi>
      <bibkey>yang-etal-2019-tokyotech</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="62">
      <title><fixed-case>UAIC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 3: Extracting Much from Little</title>
      <author><first>Cristian</first><last>Simionescu</last></author>
      <author><first>Ingrid</first><last>Stoleru</last></author>
      <author><first>Diana</first><last>Lucaci</last></author>
      <author><first>Gheorghe</first><last>Balan</last></author>
      <author><first>Iulian</first><last>Bute</last></author>
      <author><first>Adrian</first><last>Iftene</last></author>
      <pages>355&#8211;359</pages>
      <abstract>In this paper, we present a system description for implementing a sentiment analysis agent capable of interpreting the state of an interlocutor engaged in short three message conversations. We present the results and observations of our work and which parts could be further improved in the future.</abstract>
      <url hash="f6498324">S19-2062</url>
      <doi>10.18653/v1/S19-2062</doi>
      <bibkey>simionescu-etal-2019-uaic</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/emocontext">EmoContext</pwcdataset>
    </paper>
    <paper id="65">
      <title><fixed-case>ABARUAH</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5 : Bi-directional <fixed-case>LSTM</fixed-case> for Hate Speech Detection</title>
      <author><first>Arup</first><last>Baruah</last></author>
      <author><first>Ferdous</first><last>Barbhuiya</last></author>
      <author><first>Kuntal</first><last>Dey</last></author>
      <pages>371&#8211;376</pages>
      <abstract>In this paper, we present the results obtained using bi-directional long short-term memory (BiLSTM) with and without attention and Logistic Regression (LR) models for SemEval-2019 Task 5 titled &#8221;HatEval: Multilingual Detection of Hate Speech Against Immigrants and Women in Twitter&#8221;. This paper presents the results obtained for Subtask A for English language. The results of the BiLSTM and LR models are compared for two different types of preprocessing. One with no stemming performed and no stopwords removed. The other with stemming performed and stopwords removed. The BiLSTM model without attention performed the best for the first test, while the LR model with character n-grams performed the best for the second test. The BiLSTM model obtained an F1 score of 0.51 on the test set and obtained an official ranking of 8/71.</abstract>
      <url hash="bf0ed437">S19-2065</url>
      <doi>10.18653/v1/S19-2065</doi>
      <bibkey>baruah-etal-2019-abaruah</bibkey>
    </paper>
    <paper id="67">
      <title><fixed-case>CIC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Simple Yet Very Efficient Approach to Hate Speech Detection, Aggressive Behavior Detection, and Target Classification in <fixed-case>T</fixed-case>witter</title>
      <author><first>Iqra</first><last>Ameer</last></author>
      <author><first>Muhammad Hammad Fahim</first><last>Siddiqui</last></author>
      <author><first>Grigori</first><last>Sidorov</last></author>
      <author><first>Alexander</first><last>Gelbukh</last></author>
      <pages>382&#8211;386</pages>
      <abstract>In recent years, the use of social media has in-creased incredibly. Social media permits Inter-net users a friendly platform to express their views and opinions. Along with these nice and distinct communication chances, it also allows bad things like usage of hate speech. Online automatic hate speech detection in various aspects is a significant scientific problem. This paper presents the Instituto Polit&#233;cnico Nacional (Mexico) approach for the Semeval 2019 Task-5 [Hateval 2019] (Basile et al., 2019) competition for Multilingual Detection of Hate Speech on Twitter. The goal of this paper is to detect (A) Hate speech against immigrants and women, (B) Aggressive behavior and target classification, both for English and Spanish. In the proposed approach, we used a bag of words model with preprocessing (stem-ming and stop words removal). We submitted two different systems with names: (i) CIC-1 and (ii) CIC-2 for Hateval 2019 shared task. We used TF values in the first system and TF-IDF for the second system. The first system, CIC-1 got 2nd rank in subtask B for both English and Spanish languages with EMR score of 0.568 for English and 0.675 for Spanish. The second system, CIC-2 was ranked 4th in sub-task A and 1st in subtask B for Spanish language with a macro-F1 score of 0.727 and EMR score of 0.705 respectively.</abstract>
      <url hash="ebf50cc8">S19-2067</url>
      <doi>10.18653/v1/S19-2067</doi>
      <bibkey>ameer-etal-2019-cic</bibkey>
    </paper>
    <paper id="68">
      <title><fixed-case>C</fixed-case>i<fixed-case>TIUS</fixed-case>-<fixed-case>COLE</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Combining Linguistic Features to Identify Hate Speech Against Immigrants and Women on Multilingual Tweets</title>
      <author><first>Sattam</first><last>Almatarneh</last></author>
      <author><first>Pablo</first><last>Gamallo</last></author>
      <author><first>Francisco J. Ribadas</first><last>Pena</last></author>
      <pages>387&#8211;390</pages>
      <abstract>This article describes the strategy submitted by the CiTIUS-COLE team to SemEval 2019 Task 5, a task which consists of binary classi- fication where the system predicting whether a tweet in English or in Spanish is hateful against women or immigrants or not. The proposed strategy relies on combining linguis- tic features to improve the classifier&#8217;s perfor- mance. More precisely, the method combines textual and lexical features, embedding words with the bag of words in Term Frequency- Inverse Document Frequency (TF-IDF) repre- sentation. The system performance reaches about 81% F1 when it is applied to the training dataset, but its F1 drops to 36% on the official test dataset for the English and 64% for the Spanish language concerning the hate speech class</abstract>
      <url hash="99d94ef8">S19-2068</url>
      <doi>10.18653/v1/S19-2068</doi>
      <bibkey>almatarneh-etal-2019-citius</bibkey>
    </paper>
    <paper id="69">
      <title>Grunn2019 at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Shared Task on Multilingual Detection of Hate</title>
      <author><first>Mike</first><last>Zhang</last></author>
      <author><first>Roy</first><last>David</last></author>
      <author><first>Leon</first><last>Graumans</last></author>
      <author><first>Gerben</first><last>Timmerman</last></author>
      <pages>391&#8211;395</pages>
      <abstract>Hate speech occurs more often than ever and polarizes society. To help counter this polarization, SemEval 2019 organizes a shared task called the Multilingual Detection of Hate. The first task (A) is to decide whether a given tweet contains hate against immigrants or women, in a multilingual perspective, for English and Spanish. In the second task (B), the system is also asked to classify the following sub-tasks: hateful tweets as aggressive or not aggressive, and to identify the target harassed as individual or generic. We evaluate multiple models, and finally combine them in an ensemble setting. This ensemble setting is built of five and three submodels for the English and Spanish task respectively. In the current setup it shows that using a bigger ensemble for English tweets performs mediocre, while a slightly smaller ensemble does work well for detecting hate speech in Spanish tweets. Our results on the test set for English show 0.378 macro F1 on task A and 0.553 macro F1 on task B. For Spanish the results are significantly higher, 0.701 macro F1 on task A and 0.734 macro F1 for task B.</abstract>
      <url hash="9bd73a34">S19-2069</url>
      <doi>10.18653/v1/S19-2069</doi>
      <bibkey>zhang-etal-2019-grunn2019</bibkey>
    </paper>
    <paper id="72">
      <title><fixed-case>HATER</fixed-case>ecognizer at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Using Features and Neural Networks to Face Hate Recognition</title>
      <author><first>Victor</first><last>Nina-Alcocer</last></author>
      <pages>409&#8211;415</pages>
      <abstract>This paper presents a detailed description of our participation in task 5 on SemEval-2019. This task consists of classifying English and Spanish tweets that contain hate towards women or immigrants. We carried out several experiments; for a finer-grained study of the task, we analyzed different features and designing architectures of neural networks. Additionally, to face the lack of hate content in tweets, we include data augmentation as a technique to in- crease hate content in our datasets.</abstract>
      <url hash="a97a8493">S19-2072</url>
      <doi>10.18653/v1/S19-2072</doi>
      <bibkey>nina-alcocer-2019-haterecognizer</bibkey>
    </paper>
    <paper id="73">
      <title><fixed-case>GL</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Identifying hateful tweets with a deep learning approach.</title>
      <author><first>Gretel Liz</first><last>De la Pe&#241;a</last></author>
      <pages>416&#8211;419</pages>
      <abstract>This paper describes the system we developed for SemEval 2019 on Multilingual detection of hate speech against immigrants and women in Twitter (HatEval - Task 5). We use an approach based on an Attention-based Long Short-Term Memory Recurrent Neural Network. In particular, we build a Bidirectional LSTM to extract information from the word embeddings over the sentence, then apply attention over the hidden states to estimate the importance of each word and finally feed this context vector to another LSTM model to get a representation. Then, the output obtained with this model is used to get the prediction of each of the sub-tasks.</abstract>
      <url hash="4150b04f">S19-2073</url>
      <doi>10.18653/v1/S19-2073</doi>
      <bibkey>de-la-pena-2019-gl</bibkey>
    </paper>
    <paper id="74">
      <title><fixed-case>INF</fixed-case>-<fixed-case>H</fixed-case>at<fixed-case>E</fixed-case>val at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Convolutional Neural Networks for Hate Speech Detection Against Women and Immigrants on <fixed-case>T</fixed-case>witter</title>
      <author><first>Alison</first><last>Ribeiro</last></author>
      <author><first>N&#225;dia</first><last>Silva</last></author>
      <pages>420&#8211;425</pages>
      <abstract>In this paper, we describe our approach to detect hate speech against women and immigrants on Twitter in a multilingual context, English and Spanish. This challenge was proposed by the SemEval-2019 Task 5, where participants should develop models for hate speech detection, a two-class classification where systems have to predict whether a tweet in English or in Spanish with a given target (women or immigrants) is hateful or not hateful (Task A), and whether the hate speech is directed at a specific person or a group of individuals (Task B). For this, we implemented a Convolutional Neural Networks (CNN) using pre-trained word embeddings (GloVe and FastText) with 300 dimensions. Our proposed model obtained in Task A 0.488 and 0.696 F1-score for English and Spanish, respectively. For Task B, the CNN obtained 0.297 and 0.430 EMR for English and Spanish, respectively.</abstract>
      <url hash="e34af83d">S19-2074</url>
      <doi>10.18653/v1/S19-2074</doi>
      <bibkey>ribeiro-silva-2019-inf</bibkey>
    </paper>
    <paper id="77">
      <title><fixed-case>LT</fixed-case>3 at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Multilingual Detection of Hate Speech Against Immigrants and Women in <fixed-case>T</fixed-case>witter (hat<fixed-case>E</fixed-case>val)</title>
      <author><first>Nina</first><last>Bauwelinck</last></author>
      <author><first>Gilles</first><last>Jacobs</last></author>
      <author><first>V&#233;ronique</first><last>Hoste</last></author>
      <author><first>Els</first><last>Lefever</last></author>
      <pages>436&#8211;440</pages>
      <abstract>This paper describes our contribution to the SemEval-2019 Task 5 on the detection of hate speech against immigrants and women in Twitter (hatEval). We considered a supervised classification-based approach to detect hate speech in English tweets, which combines a variety of standard lexical and syntactic features with specific features for capturing offensive language. Our experimental results show good classification performance on the training data, but a considerable drop in recall on the held-out test set.</abstract>
      <url hash="e950a437">S19-2077</url>
      <doi>10.18653/v1/S19-2077</doi>
      <bibkey>bauwelinck-etal-2019-lt3</bibkey>
    </paper>
    <paper id="79">
      <title><fixed-case>M</fixed-case>ineria<fixed-case>UNAM</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Detecting Hate Speech in <fixed-case>T</fixed-case>witter using Multiple Features in a Combinatorial Framework</title>
      <author><first>Luis Enrique</first><last>Argota Vega</last></author>
      <author><first>Jorge Carlos</first><last>Reyes-Maga&#241;a</last></author>
      <author><first>Helena</first><last>G&#243;mez-Adorno</last></author>
      <author><first>Gemma</first><last>Bel-Enguix</last></author>
      <pages>447&#8211;452</pages>
      <abstract>This paper presents our approach to the Task 5 of Semeval-2019, which aims at detecting hate speech against immigrants and women in Twitter. The task consists of two sub-tasks, in Spanish and English: (A) detection of hate speech and (B) classification of hateful tweets as aggressive or not, and identification of the target harassed as individual or group. We used linguistically motivated features and several types of n-grams (words, characters, functional words, punctuation symbols, POS, among others). For task A, we trained a Support Vector Machine using a combinatorial framework, whereas for task B we followed a multi-labeled approach using the Random Forest classifier. Our approach achieved the highest F1-score in sub-task A for the Spanish language.</abstract>
      <url hash="c9718937">S19-2079</url>
      <doi>10.18653/v1/S19-2079</doi>
      <bibkey>argota-vega-etal-2019-mineriaunam</bibkey>
    </paper>
    <paper id="82">
      <title><fixed-case>STUFIIT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Multilingual Hate Speech Detection on <fixed-case>T</fixed-case>witter with <fixed-case>MUSE</fixed-case> and <fixed-case>ELM</fixed-case>o Embeddings</title>
      <author><first>Michal</first><last>Bojkovsk&#253;</last></author>
      <author><first>Mat&#250;&#353;</first><last>Pikuliak</last></author>
      <pages>464&#8211;468</pages>
      <abstract>We present a number of models used for hate speech detection for Semeval 2019 Task-5: Hateval. We evaluate the viability of multilingual learning for this task. We also experiment with adversarial learning as a means of creating a multilingual model. Ultimately our multilingual models have had worse results than their monolignual counterparts. We find that the choice of word representations (word embeddings) is very crucial for deep learning as a simple switch between MUSE and ELMo embeddings has shown a 3-4% increase in accuracy. This also shows the importance of context when dealing with online content.</abstract>
      <url hash="8b6f8cd8">S19-2082</url>
      <doi>10.18653/v1/S19-2082</doi>
      <bibkey>bojkovsky-pikuliak-2019-stufiit</bibkey>
    </paper>
    <paper id="87">
      <title>The binary trio at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Multitarget Hate Speech Detection in Tweets</title>
      <author><first>Patricia</first><last>Chiril</last></author>
      <author><first>Farah</first><last>Benamara Zitoune</last></author>
      <author><first>V&#233;ronique</first><last>Moriceau</last></author>
      <author><first>Abhishek</first><last>Kumar</last></author>
      <pages>489&#8211;493</pages>
      <abstract>The massive growth of user-generated web content through blogs, online forums and most notably, social media networks, led to a large spreading of hatred or abusive messages which have to be moderated. This paper proposes a supervised approach to hate speech detection towards immigrants and women in English tweets. Several models have been developed ranging from feature-engineering approaches to neural ones.</abstract>
      <url hash="6350a720">S19-2087</url>
      <doi>10.18653/v1/S19-2087</doi>
      <bibkey>chiril-etal-2019-binary</bibkey>
    </paper>
    <paper id="88">
      <title>The Titans at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Detection of hate speech against immigrants and women in <fixed-case>T</fixed-case>witter</title>
      <author><first>Avishek</first><last>Garain</last></author>
      <author><first>Arpan</first><last>Basu</last></author>
      <pages>494&#8211;497</pages>
      <abstract>This system paper is a description of the system submitted to &#8221;SemEval-2019 Task 5&#8221; Task B for the English language, where we had to primarily detect hate speech and then detect aggressive behaviour and its target audience in Twitter. There were two specific target audiences, immigrants and women. The language of the tweets was English. We were required to first detect whether a tweet is containing hate speech. Thereafter we were required to find whether the tweet was showing aggressive behaviour, and then we had to find whether the targeted audience was an individual or a group of people.</abstract>
      <url hash="28f7a6de">S19-2088</url>
      <doi>10.18653/v1/S19-2088</doi>
      <bibkey>garain-basu-2019-titans</bibkey>
    </paper>
    <paper id="89">
      <title><fixed-case>T</fixed-case>u<fixed-case>E</fixed-case>val at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: <fixed-case>LSTM</fixed-case> Approach to Hate Speech Detection in <fixed-case>E</fixed-case>nglish and <fixed-case>S</fixed-case>panish</title>
      <author><first>Mihai</first><last>Manolescu</last></author>
      <author><first>Denise</first><last>L&#246;fflad</last></author>
      <author><first>Adham Nasser</first><last>Mohamed Saber</last></author>
      <author><first>Masoumeh</first><last>Moradipour Tari</last></author>
      <pages>498&#8211;502</pages>
      <abstract>The detection of hate speech, especially in online platforms and forums, is quickly becoming a hot topic as anti-hate speech legislation begins to be applied to public discourse online. The HatEval shared task was created with this in mind; participants were expected to develop a model capable of determining whether or not input (in this case, Twitter datasets in English and Spanish) could be considered hate speech (designated as Task A), if they were aggressive, and whether the tweet was targeting an individual, or speaking generally (Task B). We approached this task by creating an LSTM model with an embedding layer. We found that our model performed considerably better on English language input when compared to Spanish language input. In English, we achieved an F1-Score of 0.466 for Task A and 0.462 for Task B; In Spanish, we achieved scores of 0.617 and 0.612 on Task A and Task B, respectively.</abstract>
      <url hash="df9516c2">S19-2089</url>
      <doi>10.18653/v1/S19-2089</doi>
      <bibkey>manolescu-etal-2019-tueval</bibkey>
    </paper>
    <paper id="90">
      <title>Tw-<fixed-case>S</fixed-case>t<fixed-case>AR</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: N-gram embeddings for Hate Speech Detection in Multilingual Tweets</title>
      <author><first>Hala</first><last>Mulki</last></author>
      <author><first>Chedi</first><last>Bechikh Ali</last></author>
      <author><first>Hatem</first><last>Haddad</last></author>
      <author><first>Ismail</first><last>Babao&#287;lu</last></author>
      <pages>503&#8211;507</pages>
      <abstract>In this paper, we describe our contribution in SemEval-2019: subtask A of task 5 &#8220;Multilingual detection of hate speech against immigrants and women in Twitter (HatEval)&#8221;. We developed two hate speech detection model variants through Tw-StAR framework. While the first model adopted one-hot encoding ngrams to train an NB classifier, the second generated and learned n-gram embeddings within a feedforward neural network. For both models, specific terms, selected via MWT patterns, were tagged in the input data. With two feature types employed, we could investigate the ability of n-gram embeddings to rival one-hot n-grams. Our results showed that in English, n-gram embeddings outperformed one-hot ngrams. However, representing Spanish tweets by one-hot n-grams yielded a slightly better performance compared to that of n-gram embeddings. The official ranking indicated that Tw-StAR ranked 9th for English and 20th for Spanish.</abstract>
      <url hash="92985795">S19-2090</url>
      <doi>10.18653/v1/S19-2090</doi>
      <bibkey>mulki-etal-2019-tw</bibkey>
    </paper>
    <paper id="91">
      <title><fixed-case>UA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Setting A Strong Linear Baseline for Hate Speech Detection</title>
      <author><first>Carlos</first><last>Perell&#243;</last></author>
      <author><first>David</first><last>Tom&#225;s</last></author>
      <author><first>Alberto</first><last>Garcia-Garcia</last></author>
      <author><first>Jose</first><last>Garcia-Rodriguez</last></author>
      <author><first>Jose</first><last>Camacho-Collados</last></author>
      <pages>508&#8211;513</pages>
      <abstract>This paper describes the system developed at the University of Alicante (UA) for the SemEval 2019 Task 5: Shared Task on Multilingual Detection of Hate. The purpose of this work is to build a strong baseline for hate speech detection, using a traditional machine learning approach with standard textual features, which could serve in a near future as a reference to compare with deep learning systems. We participated in both task A (Hate Speech Detection against Immigrants and Women) and task B (Aggressive behavior and Target Classification). Despite its simplicity, our system obtained a remarkable F1-score of 72.5 (sixth highest) and an accuracy of 73.6 (second highest) in Spanish (task A), outperforming more complex neural models from a total of 40 participant systems.</abstract>
      <url hash="6564c845">S19-2091</url>
      <doi>10.18653/v1/S19-2091</doi>
      <bibkey>perello-etal-2019-ua</bibkey>
    </paper>
    <paper id="92">
      <title><fixed-case>UNBNLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5 and 6: Using Language Models to Detect Hate Speech and Offensive Language</title>
      <author><first>Ali</first><last>Hakimi Parizi</last></author>
      <author><first>Milton</first><last>King</last></author>
      <author><first>Paul</first><last>Cook</last></author>
      <pages>514&#8211;518</pages>
      <abstract>In this paper we apply a range of approaches to language modeling &#8211; including word-level n-gram and neural language models, and character-level neural language models &#8211; to the problem of detecting hate speech and offensive language. Our findings indicate that language models are able to capture knowledge of whether text is hateful or offensive. However, our findings also indicate that more conventional approaches to text classification often perform similarly or better.</abstract>
      <url hash="313e3d79">S19-2092</url>
      <doi>10.18653/v1/S19-2092</doi>
      <bibkey>hakimi-parizi-etal-2019-unbnlp</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/hate-speech-and-offensive-language">Hate Speech and Offensive Language</pwcdataset>
    </paper>
    <paper id="93">
      <title><fixed-case>UTFPR</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Hate Speech Identification with Recurrent Neural Networks</title>
      <author><first>Gustavo Henrique</first><last>Paetzold</last></author>
      <author><first>Marcos</first><last>Zampieri</last></author>
      <author><first>Shervin</first><last>Malmasi</last></author>
      <pages>519&#8211;523</pages>
      <abstract>In this paper we revisit the problem of automatically identifying hate speech in posts from social media. We approach the task using a system based on minimalistic compositional Recurrent Neural Networks (RNN). We tested our approach on the SemEval-2019 Task 5: Multilingual Detection of Hate Speech Against Immigrants and Women in Twitter (HatEval) shared task dataset. The dataset made available by the HatEval organizers contained English and Spanish posts retrieved from Twitter annotated with respect to the presence of hateful content and its target. In this paper we present the results obtained by our system in comparison to the other entries in the shared task. Our system achieved competitive performance ranking 7th in sub-task A out of 62 systems in the English track.</abstract>
      <url hash="a5998468">S19-2093</url>
      <doi>10.18653/v1/S19-2093</doi>
      <bibkey>paetzold-etal-2019-utfpr</bibkey>
    </paper>
    <paper id="95">
      <title><fixed-case>YNU</fixed-case> <fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5: Attention and Capsule Ensemble for Identifying Hate Speech</title>
      <author><first>Bin</first><last>Wang</last></author>
      <author><first>Haiyan</first><last>Ding</last></author>
      <pages>529&#8211;534</pages>
      <abstract>This paper describes the system submitted to SemEval 2019 Task 5: Multilingual detection of hate speech against immigrants and women in Twitter (hatEval). Its main purpose is to conduct hate speech detection on Twitter, which mainly includes two specific different targets, immigrants and women. We participate in both subtask A and subtask B for English. In order to address this task, we develope an ensemble of an attention-LSTM model based on HAN and an BiGRU-capsule model. Both models use fastText pre-trained embeddings, and we use this model in both subtasks. In comparison to other participating teams, our system is ranked 16th in the Sub-task A for English, and 12th in the Sub-task B for English.</abstract>
      <url hash="182cb66b">S19-2095</url>
      <doi>10.18653/v1/S19-2095</doi>
      <bibkey>wang-ding-2019-ynu</bibkey>
    </paper>
    <paper id="99">
      <title><fixed-case>BNU</fixed-case>-<fixed-case>HKBU</fixed-case> <fixed-case>UIC</fixed-case> <fixed-case>NLP</fixed-case> Team 2 at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Detecting Offensive Language Using <fixed-case>BERT</fixed-case> model</title>
      <author><first>Zhenghao</first><last>Wu</last></author>
      <author><first>Hao</first><last>Zheng</last></author>
      <author><first>Jianming</first><last>Wang</last></author>
      <author><first>Weifeng</first><last>Su</last></author>
      <author><first>Jefferson</first><last>Fong</last></author>
      <pages>551&#8211;555</pages>
      <abstract>In this study we deal with the problem of identifying and categorizing offensive language in social media. Our group, BNU-HKBU UIC NLP Team2, use supervised classification along with multiple version of data generated by different ways of pre-processing the data. We then use the state-of-the-art model Bidirectional Encoder Representations from Transformers, or BERT (Devlin et al, 2018), to capture linguistic, syntactic and semantic features. Long range dependencies between each part of a sentence can be captured by BERT&#8217;s bidirectional encoder representations. Our results show 85.12% accuracy and 80.57% F1 scores in Subtask A (offensive language identification), 87.92% accuracy and 50% F1 scores in Subtask B (categorization of offense types), and 69.95% accuracy and 50.47% F1 score in Subtask C (offense target identification). Analysis of the results shows that distinguishing between targeted and untargeted offensive language is not a simple task. More work needs to be done on the unbalance data problem in Subtasks B and C. Some future work is also discussed.</abstract>
      <url hash="92467cc0">S19-2099</url>
      <doi>10.18653/v1/S19-2099</doi>
      <bibkey>wu-etal-2019-bnu</bibkey>
    </paper>
    <paper id="102">
      <title><fixed-case>C</fixed-case>onv<fixed-case>AI</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Offensive Language Identification and Categorization with Perspective and <fixed-case>BERT</fixed-case></title>
      <author><first>John</first><last>Pavlopoulos</last></author>
      <author><first>Nithum</first><last>Thain</last></author>
      <author><first>Lucas</first><last>Dixon</last></author>
      <author><first>Ion</first><last>Androutsopoulos</last></author>
      <pages>571&#8211;576</pages>
      <abstract>This paper presents the application of two strong baseline systems for toxicity detection and evaluates their performance in identifying and categorizing offensive language in social media. PERSPECTIVE is an API, that serves multiple machine learning models for the improvement of conversations online, as well as a toxicity detection system, trained on a wide variety of comments from platforms across the Internet. BERT is a recently popular language representation model, fine tuned per task and achieving state of the art performance in multiple NLP tasks. PERSPECTIVE performed better than BERT in detecting toxicity, but BERT was much better in categorizing the offensive type. Both baselines were ranked surprisingly high in the SEMEVAL-2019 OFFENSEVAL competition, PERSPECTIVE in detecting an offensive post (12th) and BERT in categorizing it (11th). The main contribution of this paper is the assessment of two strong baselines for the identification (PERSPECTIVE) and the categorization (BERT) of offensive language with little or no additional training data.</abstract>
      <url hash="7b91d480">S19-2102</url>
      <doi>10.18653/v1/S19-2102</doi>
      <bibkey>pavlopoulos-etal-2019-convai</bibkey>
    </paper>
    <paper id="104">
      <title><fixed-case>D</fixed-case>eep<fixed-case>A</fixed-case>nalyzer at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: A deep learning-based ensemble method for identifying offensive tweets</title>
      <author><first>Gretel Liz</first><last>De la Pe&#241;a</last></author>
      <author><first>Paolo</first><last>Rosso</last></author>
      <pages>582&#8211;586</pages>
      <abstract>This paper describes the system we developed for SemEval 2019 on Identifying and Categorizing Offensive Language in Social Media (OffensEval - Task 6). The task focuses on offensive language in tweets. It is organized into three sub-tasks for offensive language identification; automatic categorization of offense types and offense target identification. The approach for the first subtask is a deep learning-based ensemble method which uses a Bidirectional LSTM Recurrent Neural Network and a Convolutional Neural Network. Additionally we use the information from part-of-speech tagging of tweets for target identification and combine previous results for categorization of offense types.</abstract>
      <url hash="52e79ec1">S19-2104</url>
      <doi>10.18653/v1/S19-2104</doi>
      <bibkey>de-la-pena-rosso-2019-deepanalyzer</bibkey>
    </paper>
    <paper id="106">
      <title><fixed-case>D</fixed-case>uluth at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Lexical Approaches to Identify and Categorize Offensive Tweets</title>
      <author><first>Ted</first><last>Pedersen</last></author>
      <pages>593&#8211;599</pages>
      <abstract>This paper describes the Duluth systems that participated in SemEval&#8211;2019 Task 6, Identifying and Categorizing Offensive Language in Social Media (OffensEval). For the most part these systems took traditional Machine Learning approaches that built classifiers from lexical features found in manually labeled training data. However, our most successful system for classifying a tweet as offensive (or not) was a rule-based black&#8211;list approach, and we also experimented with combining the training data from two different but related SemEval tasks. Our best systems in each of the three OffensEval tasks placed in the middle of the comparative evaluation, ranking 57th of 103 in task A, 39th of 75 in task B, and 44th of 65 in task C.</abstract>
      <url hash="a8819816">S19-2106</url>
      <doi>10.18653/v1/S19-2106</doi>
      <bibkey>pedersen-2019-duluth</bibkey>
    </paper>
    <paper id="110">
      <title>Ghmerti at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: A Deep Word- and Character-based Approach to Offensive Language Identification</title>
      <author><first>Ehsan</first><last>Doostmohammadi</last></author>
      <author><first>Hossein</first><last>Sameti</last></author>
      <author><first>Ali</first><last>Saffar</last></author>
      <pages>617&#8211;621</pages>
      <abstract>This paper presents the models submitted by Ghmerti team for subtasks A and B of the OffensEval shared task at SemEval 2019. OffensEval addresses the problem of identifying and categorizing offensive language in social media in three subtasks; whether or not a content is offensive (subtask A), whether it is targeted (subtask B) towards an individual, a group, or other entities (subtask C). The proposed approach includes character-level Convolutional Neural Network, word-level Recurrent Neural Network, and some preprocessing. The performance achieved by the proposed model is 77.93% macro-averaged F1-score.</abstract>
      <url hash="d0d70f2e">S19-2110</url>
      <doi>10.18653/v1/S19-2110</doi>
      <bibkey>doostmohammadi-etal-2019-ghmerti</bibkey>
      <pwccode url="https://github.com/edoost/offenseval" additional="false">edoost/offenseval</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="111">
      <title><fixed-case>HAD</fixed-case>-<fixed-case>T</fixed-case>&#252;bingen at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Deep Learning Analysis of Offensive Language on <fixed-case>T</fixed-case>witter: Identification and Categorization</title>
      <author><first>Himanshu</first><last>Bansal</last></author>
      <author><first>Daniel</first><last>Nagel</last></author>
      <author><first>Anita</first><last>Soloveva</last></author>
      <pages>622&#8211;627</pages>
      <abstract>This paper describes the submissions of our team, HAD-T&#252;bingen, for the SemEval 2019 - Task 6: &#8220;OffensEval: Identifying and Categorizing Offensive Language in Social Media&#8221;. We participated in all the three sub-tasks: Sub-task A - &#8220;Offensive language identification&#8221;, sub-task B - &#8220;Automatic categorization of offense types&#8221; and sub-task C - &#8220;Offense target identification&#8221;. As a baseline model we used a Long short-term memory recurrent neural network (LSTM) to identify and categorize offensive tweets. For all the tasks we experimented with external databases in a postprocessing step to enhance the results made by our model. The best macro-average F1 scores obtained for the sub-tasks A, B and C are 0.73, 0.52, and 0.37, respectively.</abstract>
      <url hash="4464b2a5">S19-2111</url>
      <doi>10.18653/v1/S19-2111</doi>
      <bibkey>bansal-etal-2019-tubingen</bibkey>
    </paper>
    <paper id="112">
      <title><fixed-case>HHU</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Context Does Matter - Tackling Offensive Language Identification and Categorization with <fixed-case>ELM</fixed-case>o</title>
      <author><first>Alexander</first><last>Oberstrass</last></author>
      <author><first>Julia</first><last>Romberg</last></author>
      <author><first>Anke</first><last>Stoll</last></author>
      <author><first>Stefan</first><last>Conrad</last></author>
      <pages>628&#8211;634</pages>
      <abstract>We present our results for OffensEval: Identifying and Categorizing Offensive Language in Social Media (SemEval 2019 - Task 6). Our results show that context embeddings are important features for the three different sub-tasks in connection with classical machine and with deep learning. Our best model reached place 3 of 75 in sub-task B with a macro <tex-math>F_1</tex-math> of 0.719. Our approaches for sub-task A and C perform less well but could also deliver promising results.</abstract>
      <url hash="1e357b3c">S19-2112</url>
      <doi>10.18653/v1/S19-2112</doi>
      <bibkey>oberstrass-etal-2019-hhu</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/hate-speech-and-offensive-language">Hate Speech and Offensive Language</pwcdataset>
    </paper>
    <paper id="114">
      <title><fixed-case>INGEOTEC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 5 and Task 6: A Genetic Programming Approach for Text Classification</title>
      <author><first>Mario</first><last>Graff</last></author>
      <author><first>Sabino</first><last>Miranda-Jim&#233;nez</last></author>
      <author><first>Eric</first><last>Tellez</last></author>
      <author><first>Daniela Alejandra</first><last>Ochoa</last></author>
      <pages>639&#8211;644</pages>
      <abstract>This paper describes our participation in HatEval and OffensEval challenges for English and Spanish languages. We used several approaches, B4MSA, FastText, and EvoMSA. Best results were achieved with EvoMSA, which is a multilingual and domain-independent architecture that combines the prediction of different knowledge sources to solve text classification problems.</abstract>
      <url hash="c14e019c">S19-2114</url>
      <doi>10.18653/v1/S19-2114</doi>
      <bibkey>graff-etal-2019-ingeotec</bibkey>
    </paper>
    <paper id="117">
      <title><fixed-case>JTML</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Offensive Tweets Identification using Convolutional Neural Networks</title>
      <author><first>Johnny</first><last>Torres</last></author>
      <author><first>Carmen</first><last>Vaca</last></author>
      <pages>657&#8211;661</pages>
      <abstract>In this paper, we propose the use of a Convolutional Neural Network (CNN) to identify offensive tweets, as well as the type and target of the offense. We use an end-to-end model (i.e., no preprocessing) and fine-tune pre-trained embeddings (FastText) during training for learning words&#8217; representation. We compare the proposed CNN model to a baseline model, such as Linear Regression, and several neural models. The results show that CNN outperforms other models, and stands as a simple but strong baseline in comparison to other systems submitted to the Shared Task.</abstract>
      <url hash="25d2016f">S19-2117</url>
      <doi>10.18653/v1/S19-2117</doi>
      <bibkey>torres-vaca-2019-jtml</bibkey>
    </paper>
    <paper id="120">
      <title><fixed-case>L</fixed-case>a<fixed-case>STUS</fixed-case>/<fixed-case>TALN</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Identification and Categorization of Offensive Language in Social Media with Attention-based <fixed-case>B</fixed-case>i-<fixed-case>LSTM</fixed-case> model</title>
      <author><first>Lutfiye Seda</first><last>Mut Altin</last></author>
      <author><first>&#192;lex</first><last>Bravo Serrano</last></author>
      <author><first>Horacio</first><last>Saggion</last></author>
      <pages>672&#8211;677</pages>
      <abstract>We present a bidirectional Long-Short Term Memory network for identifying offensive language in Twitter. Our system has been developed in the context of the SemEval 2019 Task 6 which comprises three different sub-tasks, namely A: Offensive Language Detection, B: Categorization of Offensive Language, C: Offensive Language Target Identification. We used a pre-trained Word Embeddings in tweet data, including information about emojis and hashtags. Our approach achieves good performance in the three sub-tasks.</abstract>
      <url hash="54124408">S19-2120</url>
      <doi>10.18653/v1/S19-2120</doi>
      <bibkey>mut-altin-etal-2019-lastus</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/hate-speech-and-offensive-language">Hate Speech and Offensive Language</pwcdataset>
    </paper>
    <paper id="121">
      <title><fixed-case>LTL</fixed-case>-<fixed-case>UDE</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: <fixed-case>BERT</fixed-case> and Two-Vote Classification for Categorizing Offensiveness</title>
      <author><first>Piush</first><last>Aggarwal</last></author>
      <author><first>Tobias</first><last>Horsmann</last></author>
      <author><first>Michael</first><last>Wojatzki</last></author>
      <author><first>Torsten</first><last>Zesch</last></author>
      <pages>678&#8211;682</pages>
      <abstract>We present results for Subtask A and C of SemEval 2019 Shared Task 6. In Subtask A, we experiment with an embedding representation of postings and use BERT to categorize postings. Our best result reaches the 10th place (out of 103). In Subtask C, we applied a two-vote classification approach with minority fallback, which is placed on the 19th rank (out of 65).</abstract>
      <url hash="f92564e7">S19-2121</url>
      <doi>10.18653/v1/S19-2121</doi>
      <bibkey>aggarwal-etal-2019-ltl</bibkey>
    </paper>
    <paper id="122">
      <title><fixed-case>MIDAS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Identifying Offensive Posts and Targeted Offense from <fixed-case>T</fixed-case>witter</title>
      <author><first>Debanjan</first><last>Mahata</last></author>
      <author><first>Haimin</first><last>Zhang</last></author>
      <author><first>Karan</first><last>Uppal</last></author>
      <author><first>Yaman</first><last>Kumar</last></author>
      <author><first>Rajiv Ratn</first><last>Shah</last></author>
      <author><first>Simra</first><last>Shahid</last></author>
      <author><first>Laiba</first><last>Mehnaz</last></author>
      <author><first>Sarthak</first><last>Anand</last></author>
      <pages>683&#8211;690</pages>
      <abstract>In this paper we present our approach and the system description for Sub Task A and Sub Task B of SemEval 2019 Task 6: Identifying and Categorizing Offensive Language in Social Media. Sub Task A involves identifying if a given tweet is offensive and Sub Task B involves detecting if an offensive tweet is targeted towards someone (group or an individual). Our models for Sub Task A is based on an ensemble of Convolutional Neural Network and Bidirectional LSTM, whereas for Sub Task B, we rely on a set of heuristics derived from the training data. We provide detailed analysis of the results obtained using the trained models. Our team ranked 5th out of 103 participants in Sub Task A, achieving a macro F1 score of 0.807, and ranked 8th out of 75 participants achieving a macro F1 of 0.695.</abstract>
      <url hash="542419fa">S19-2122</url>
      <doi>10.18653/v1/S19-2122</doi>
      <bibkey>mahata-etal-2019-midas</bibkey>
    </paper>
    <paper id="123">
      <title>Nikolov-Radivchev at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Offensive Tweet Classification with <fixed-case>BERT</fixed-case> and Ensembles</title>
      <author><first>Alex</first><last>Nikolov</last></author>
      <author><first>Victor</first><last>Radivchev</last></author>
      <pages>691&#8211;695</pages>
      <abstract>This paper examines different approaches and models towards offensive tweet classification which were used as a part of the OffensEval 2019 competition. It reviews Tweet preprocessing, techniques for overcoming unbalanced class distribution in the provided test data, and comparison of multiple attempted machine learning models.</abstract>
      <url hash="5a46fd99">S19-2123</url>
      <doi>10.18653/v1/S19-2123</doi>
      <bibkey>nikolov-radivchev-2019-nikolov</bibkey>
    </paper>
    <paper id="124">
      <title><fixed-case>NIT</fixed-case>_<fixed-case>A</fixed-case>gartala_<fixed-case>NLP</fixed-case>_<fixed-case>T</fixed-case>eam at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: An Ensemble Approach to Identifying and Categorizing Offensive Language in <fixed-case>T</fixed-case>witter Social Media Corpora</title>
      <author><first>Steve Durairaj</first><last>Swamy</last></author>
      <author><first>Anupam</first><last>Jamatia</last></author>
      <author><first>Bj&#246;rn</first><last>Gamb&#228;ck</last></author>
      <author><first>Amitava</first><last>Das</last></author>
      <pages>696&#8211;703</pages>
      <abstract>The paper describes the systems submitted to OffensEval (SemEval 2019, Task 6) on &#8216;Identifying and Categorizing Offensive Language in Social Media&#8217; by the &#8216;NIT_Agartala_NLP_Team&#8217;. A Twitter annotated dataset of 13,240 English tweets was provided by the task organizers to train the individual models, with the best results obtained using an ensemble model composed of six different classifiers. The ensemble model produced macro-averaged F1-scores of 0.7434, 0.7078 and 0.4853 on Subtasks A, B, and C, respectively. The paper highlights the overall low predictive nature of various linguistic features and surface level count features, as well as the limitations of a traditional machine learning approach when compared to a Deep Learning counterpart.</abstract>
      <url hash="f5a81cb9">S19-2124</url>
      <doi>10.18653/v1/S19-2124</doi>
      <bibkey>swamy-etal-2019-nit</bibkey>
    </paper>
    <paper id="125">
      <title><fixed-case>NLP</fixed-case>@<fixed-case>UIOWA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Classifying the Crass using Multi-windowed <fixed-case>CNN</fixed-case>s</title>
      <author><first>Jonathan</first><last>Rusert</last></author>
      <author><first>Padmini</first><last>Srinivasan</last></author>
      <pages>704&#8211;711</pages>
      <abstract>This paper proposes a system for OffensEval (SemEval 2019 Task 6), which calls for a system to classify offensive language into several categories. Our system is a text based CNN, which learns only from the provided training data. Our system achieves 80 - 90% accuracy for the binary classification problems (offensive vs not offensive and targeted vs untargeted) and 63% accuracy for trinary classification (group vs individual vs other).</abstract>
      <url hash="04380059">S19-2125</url>
      <doi>10.18653/v1/S19-2125</doi>
      <bibkey>rusert-srinivasan-2019-nlp</bibkey>
    </paper>
    <paper id="127">
      <title>nlp<fixed-case>UP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: A Deep Neural Language Model for Offensive Language Detection</title>
      <author><first>Jelena</first><last>Mitrovi&#263;</last></author>
      <author><first>Bastian</first><last>Birkeneder</last></author>
      <author><first>Michael</first><last>Granitzer</last></author>
      <pages>722&#8211;726</pages>
      <abstract>This paper presents our submission for the SemEval shared task 6, sub-task A on the identification of offensive language. Our proposed model, C-BiGRU, combines a Convolutional Neural Network (CNN) with a bidirectional Recurrent Neural Network (RNN). We utilize word2vec to capture the semantic similarities between words. This composition allows us to extract long term dependencies in tweets and distinguish between offensive and non-offensive tweets. In addition, we evaluate our approach on a different dataset and show that our model is capable of detecting online aggressiveness in both English and German tweets. Our model achieved a macro F1-score of 79.40% on the SemEval dataset.</abstract>
      <url hash="7b778ccd">S19-2127</url>
      <doi>10.18653/v1/S19-2127</doi>
      <bibkey>mitrovic-etal-2019-nlpup</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/olid">OLID</pwcdataset>
    </paper>
    <paper id="132">
      <title><fixed-case>TECHSSN</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Identifying and Categorizing Offensive Language in Tweets using Deep Neural Networks</title>
      <author><first>Angel</first><last>Suseelan</last></author>
      <author><first>Rajalakshmi</first><last>S</last></author>
      <author><first>Logesh</first><last>B</last></author>
      <author><first>Harshini</first><last>S</last></author>
      <author><first>Geetika</first><last>B</last></author>
      <author><first>Dyaneswaran</first><last>S</last></author>
      <author><first>S Milton</first><last>Rajendram</last></author>
      <author><first>Mirnalinee</first><last>T T</last></author>
      <pages>753&#8211;758</pages>
      <abstract>Task 6 of SemEval 2019 involves identifying and categorizing offensive language in social media. The systems developed by TECHSSN team uses multi-level classification techniques. We have developed two systems. In the first system, the first level of classification is done by a multi-branch 2D CNN classifier with Google&#8217;s pre-trained Word2Vec embedding and the second level of classification by string matching technique supported by offensive and bad words dictionary. The second system uses a multi-branch 1D CNN classifier with Glove pre-trained embedding layer for the first level of classification and string matching for the second level of classification. Input data with a probability of less than 0.70 in the first level are passed on to the second level. The misclassified examples are classified correctly in the second level.</abstract>
      <url hash="52900fbd">S19-2132</url>
      <doi>10.18653/v1/S19-2132</doi>
      <bibkey>suseelan-etal-2019-techssn</bibkey>
    </paper>
    <paper id="133">
      <title>The Titans at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Offensive Language Identification, Categorization and Target Identification</title>
      <author><first>Avishek</first><last>Garain</last></author>
      <author><first>Arpan</first><last>Basu</last></author>
      <pages>759&#8211;762</pages>
      <abstract>This system paper is a description of the system submitted to &#8220;SemEval-2019 Task 6&#8221;, where we had to detect offensive language in Twitter. There were two specific target audiences, immigrants and women. The language of the tweets was English. We were required to first detect whether a tweet contains offensive content, and then we had to find out whether the tweet was targeted against some individual, group or other entity. Finally we were required to classify the targeted audience.</abstract>
      <url hash="5e5b23da">S19-2133</url>
      <doi>10.18653/v1/S19-2133</doi>
      <bibkey>garain-basu-2019-titans-semeval</bibkey>
    </paper>
    <paper id="134">
      <title><fixed-case>T</fixed-case>&#252;<fixed-case>K</fixed-case>a<fixed-case>S</fixed-case>t at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Something Old, Something Neu(ral): Traditional and Neural Approaches to Offensive Text Classification</title>
      <author><first>Madeeswaran</first><last>Kannan</last></author>
      <author><first>Lukas</first><last>Stein</last></author>
      <pages>763&#8211;769</pages>
      <abstract>We describe our system (T&#252;KaSt) submitted for Task 6: Offensive Language Classification, at SemEval 2019. We developed multiple SVM classifier models that used sentence-level dense vector representations of tweets enriched with sentiment information and term-weighting. Our best results achieved F1 scores of 0.734, 0.660 and 0.465 in the first, second and third sub-tasks respectively. We also describe a neural network model that was developed in parallel but not used during evaluation due to time constraints.</abstract>
      <url hash="248be486">S19-2134</url>
      <doi>10.18653/v1/S19-2134</doi>
      <bibkey>kannan-stein-2019-tukast</bibkey>
    </paper>
    <paper id="135">
      <title><fixed-case>TUVD</fixed-case> team at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Offense Target Identification</title>
      <author><first>Elena</first><last>Shushkevich</last></author>
      <author><first>John</first><last>Cardiff</last></author>
      <author><first>Paolo</first><last>Rosso</last></author>
      <pages>770&#8211;774</pages>
      <abstract>This article presents our approach for detecting a target of offensive messages in Twitter, including Individual, Group and Others classes. The model we have created is an ensemble of simpler models, including Logistic Regression, Naive Bayes, Support Vector Machine and the interpolation between Logistic Regression and Naive Bayes with 0.25 coefficient of interpolation. The model allows us to achieve 0.547 macro F1-score.</abstract>
      <url hash="bd19f2e5">S19-2135</url>
      <doi>10.18653/v1/S19-2135</doi>
      <bibkey>shushkevich-etal-2019-tuvd</bibkey>
    </paper>
    <paper id="136">
      <title><fixed-case>UBC</fixed-case>-<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Ensemble Learning of Offensive Content With Enhanced Training Data</title>
      <author><first>Arun</first><last>Rajendran</last></author>
      <author><first>Chiyu</first><last>Zhang</last></author>
      <author><first>Muhammad</first><last>Abdul-Mageed</last></author>
      <pages>775&#8211;781</pages>
      <abstract>We examine learning offensive content on Twitter with limited, imbalanced data. For the purpose, we investigate the utility of using various data enhancement methods with a host of classical ensemble classifiers. Among the 75 participating teams in SemEval-2019 sub-task B, our system ranks 6th (with 0.706 macro F1-score). For sub-task C, among the 65 participating teams, our system ranks 9th (with 0.587 macro F1-score).</abstract>
      <url hash="608e3264">S19-2136</url>
      <doi>10.18653/v1/S19-2136</doi>
      <bibkey>rajendran-etal-2019-ubc</bibkey>
    </paper>
    <paper id="137">
      <title><fixed-case>UHH</fixed-case>-<fixed-case>LT</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Supervised vs. Unsupervised Transfer Learning for Offensive Language Detection</title>
      <author><first>Gregor</first><last>Wiedemann</last></author>
      <author><first>Eugen</first><last>Ruppert</last></author>
      <author><first>Chris</first><last>Biemann</last></author>
      <pages>782&#8211;787</pages>
      <abstract>We present a neural network based approach of transfer learning for offensive language detection. For our system, we compare two types of knowledge transfer: supervised and unsupervised pre-training. Supervised pre-training of our bidirectional GRU-3-CNN architecture is performed as multi-task learning of parallel training of five different tasks. The selected tasks are supervised classification problems from public NLP resources with some overlap to offensive language such as sentiment detection, emoji classification, and aggressive language classification. Unsupervised transfer learning is performed with a thematic clustering of 40M unlabeled tweets via LDA. Based on this dataset, pre-training is performed by predicting the main topic of a tweet. Results indicate that unsupervised transfer from large datasets performs slightly better than supervised training on small &#8216;near target category&#8217; datasets. In the SemEval Task, our system ranks 14 out of 103 participants.</abstract>
      <url hash="b137e040">S19-2137</url>
      <doi>10.18653/v1/S19-2137</doi>
      <bibkey>wiedemann-etal-2019-uhh</bibkey>
    </paper>
    <paper id="138">
      <title><fixed-case>UM</fixed-case>-<fixed-case>IU</fixed-case>@<fixed-case>LING</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: Identifying Offensive Tweets Using <fixed-case>BERT</fixed-case> and <fixed-case>SVM</fixed-case>s</title>
      <author><first>Jian</first><last>Zhu</last></author>
      <author><first>Zuoyu</first><last>Tian</last></author>
      <author><first>Sandra</first><last>K&#252;bler</last></author>
      <pages>788&#8211;795</pages>
      <abstract>This paper describes the UM-IU@LING&#8217;s system for the SemEval 2019 Task 6: Offens-Eval. We take a mixed approach to identify and categorize hate speech in social media. In subtask A, we fine-tuned a BERT based classifier to detect abusive content in tweets, achieving a macro F1 score of 0.8136 on the test data, thus reaching the 3rd rank out of 103 submissions. In subtasks B and C, we used a linear SVM with selected character n-gram features. For subtask C, our system could identify the target of abuse with a macro F1 score of 0.5243, ranking it 27th out of 65 submissions.</abstract>
      <url hash="361e7717">S19-2138</url>
      <doi>10.18653/v1/S19-2138</doi>
      <bibkey>zhu-etal-2019-um</bibkey>
      <pwccode url="https://github.com/zytian9/SemEval-2019-Task-6" additional="false">zytian9/SemEval-2019-Task-6</pwccode>
    </paper>
    <paper id="143">
      <title><fixed-case>YNUWB</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 6: K-max pooling <fixed-case>CNN</fixed-case> with average meta-embedding for identifying offensive language</title>
      <author><first>Bin</first><last>Wang</last></author>
      <author><first>Xiaobing</first><last>Zhou</last></author>
      <author><first>Xuejie</first><last>Zhang</last></author>
      <pages>818&#8211;822</pages>
      <abstract>This paper describes the system submitted to SemEval 2019 Task 6: OffensEval 2019. The task aims to identify and categorize offensive language in social media, we only participate in Sub-task A, which aims to identify offensive language. In order to address this task, we propose a system based on a K-max pooling convolutional neural network model, and use an argument for averaging as a valid meta-embedding technique to get a metaembedding. Finally, we also use a cyclic learning rate policy to improve model performance. Our model achieves a Macro F1-score of 0.802 (ranked 9/103) in the Sub-task A.</abstract>
      <url hash="a4a5db4a">S19-2143</url>
      <doi>10.18653/v1/S19-2143</doi>
      <bibkey>wang-etal-2019-ynuwb</bibkey>
    </paper>
    <paper id="147">
      <title><fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 7: <fixed-case>R</fixed-case>umour<fixed-case>E</fixed-case>val, Determining Rumour Veracity and Support for Rumours</title>
      <author><first>Genevieve</first><last>Gorrell</last></author>
      <author><first>Elena</first><last>Kochkina</last></author>
      <author><first>Maria</first><last>Liakata</last></author>
      <author><first>Ahmet</first><last>Aker</last></author>
      <author><first>Arkaitz</first><last>Zubiaga</last></author>
      <author><first>Kalina</first><last>Bontcheva</last></author>
      <author><first>Leon</first><last>Derczynski</last></author>
      <pages>845&#8211;854</pages>
      <abstract>Since the first RumourEval shared task in 2017, interest in automated claim validation has greatly increased, as the danger of &#8220;fake news&#8221; has become a mainstream concern. However automated support for rumour verification remains in its infancy. It is therefore important that a shared task in this area continues to provide a focus for effort, which is likely to increase. Rumour verification is characterised by the need to consider evolving conversations and news updates to reach a verdict on a rumour&#8217;s veracity. As in RumourEval 2017 we provided a dataset of dubious posts and ensuing conversations in social media, annotated both for stance and veracity. The social media rumours stem from a variety of breaking news stories and the dataset is expanded to include Reddit as well as new Twitter posts. There were two concrete tasks; rumour stance prediction and rumour verification, which we present in detail along with results achieved by participants. We received 22 system submissions (a 70% increase from RumourEval 2017) many of which used state-of-the-art methodology to tackle the challenges involved.</abstract>
      <url hash="40ecd9c8">S19-2147</url>
      <doi>10.18653/v1/S19-2147</doi>
      <bibkey>gorrell-etal-2019-semeval</bibkey>
    </paper>
    <paper id="148">
      <title>event<fixed-case>AI</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 7: Rumor Detection on Social Media by Exploiting Content, User Credibility and Propagation Information</title>
      <author><first>Quanzhi</first><last>Li</last></author>
      <author><first>Qiong</first><last>Zhang</last></author>
      <author><first>Luo</first><last>Si</last></author>
      <pages>855&#8211;859</pages>
      <abstract>This paper describes our system for SemEval 2019 RumorEval: Determining rumor veracity and support for rumors (SemEval 2019 Task 7). This track has two tasks: Task A is to determine a user&#8217;s stance towards the source rumor, and Task B is to detect the veracity of the rumor: true, false or unverified. For stance classification, a neural network model with language features is utilized. For rumor verification, our approach exploits information from different dimensions: rumor content, source credibility, user credibility, user stance, event propagation path, etc. We use an ensemble approach in both tasks, which includes neural network models as well as the traditional classification algorithms. Our system is ranked 1st place in the rumor verification task by both the macro F1 measure and the RMSE measure.</abstract>
      <url hash="7509f0a1">S19-2148</url>
      <doi>10.18653/v1/S19-2148</doi>
      <bibkey>li-etal-2019-eventai</bibkey>
    </paper>
    <paper id="150">
      <title><fixed-case>AUTOHOME</fixed-case>-<fixed-case>ORCA</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 8: Application of <fixed-case>BERT</fixed-case> for Fact-Checking in Community Forums</title>
      <author><first>Zhengwei</first><last>Lv</last></author>
      <author><first>Duoxing</first><last>Liu</last></author>
      <author><first>Haifeng</first><last>Sun</last></author>
      <author><first>Xiao</first><last>Liang</last></author>
      <author><first>Tao</first><last>Lei</last></author>
      <author><first>Zhizhong</first><last>Shi</last></author>
      <author><first>Feng</first><last>Zhu</last></author>
      <author><first>Lei</first><last>Yang</last></author>
      <pages>870&#8211;876</pages>
      <abstract>Fact checking is an important task for maintaining high quality posts and improving user experience in Community Question Answering forums. Therefore, the SemEval-2019 task 8 is aimed to identify factual question (subtask A) and detect true factual information from corresponding answers (subtask B). In order to address this task, we propose a system based on the BERT model with meta information of questions. For the subtask A, the outputs of fine-tuned BERT classification model are combined with the feature of length of questions to boost the performance. For the subtask B, the predictions of several variants of BERT model encoding the meta information are combined to create an ensemble model. Our system achieved competitive results with an accuracy of 0.82 in the subtask A and 0.83 in the subtask B. The experimental results validate the effectiveness of our system.</abstract>
      <url hash="71bbcacf">S19-2150</url>
      <doi>10.18653/v1/S19-2150</doi>
      <bibkey>lv-etal-2019-autohome</bibkey>
    </paper>
    <paper id="154">
      <title><fixed-case>A</fixed-case>i<fixed-case>F</fixed-case>u at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 10: A Symbolic and Sub-symbolic Integrated System for <fixed-case>SAT</fixed-case> Math Question Answering</title>
      <author><first>Yifan</first><last>Liu</last></author>
      <author><first>Keyu</first><last>Ding</last></author>
      <author><first>Yi</first><last>Zhou</last></author>
      <pages>900&#8211;906</pages>
      <abstract>AiFu has won the first place in the SemEval-2019 Task 10 - &#8221;Math Question Answering&#8221;competition. This paper is to describe how it works technically and to report and analyze some essential experimental results</abstract>
      <url hash="3d968da9">S19-2154</url>
      <doi>10.18653/v1/S19-2154</doi>
      <bibkey>liu-etal-2019-aifu</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/math23k">Math23K</pwcdataset>
    </paper>
    <paper id="159">
      <title><fixed-case>C</fixed-case>lark <fixed-case>K</fixed-case>ent at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: Stylometric Insights into Hyperpartisan News Detection</title>
      <author><first>Viresh</first><last>Gupta</last></author>
      <author><first>Baani Leen</first><last>Kaur Jolly</last></author>
      <author><first>Ramneek</first><last>Kaur</last></author>
      <author><first>Tanmoy</first><last>Chakraborty</last></author>
      <pages>934&#8211;938</pages>
      <abstract>In this paper, we present a news bias prediction system, which we developed as part of a SemEval 2019 task. We developed an XGBoost based system which uses character and word level n-gram features represented using TF-IDF, count vector based correlation matrix, and predicts if an input news article is a hyperpartisan news article. Our model was able to achieve a precision of 68.3% on the test set provided by the contest organizers. We also run our model on the BuzzFeed corpus and find XGBoost with simple character level N-Gram embeddings to be performing well with an accuracy of around 96%.</abstract>
      <url hash="0a86af79">S19-2159</url>
      <doi>10.18653/v1/S19-2159</doi>
      <bibkey>gupta-etal-2019-clark</bibkey>
    </paper>
    <paper id="160">
      <title>Dick-Preston and Morbo at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: Transfer Learning for Hyperpartisan News Detection</title>
      <author><first>Tim</first><last>Isbister</last></author>
      <author><first>Fredrik</first><last>Johansson</last></author>
      <pages>939&#8211;943</pages>
      <abstract>In a world of information operations, influence campaigns, and fake news, classification of news articles as following hyperpartisan argumentation or not is becoming increasingly important. We present a deep learning-based approach in which a pre-trained language model has been fine-tuned on domain-specific data and used for classification of news articles, as part of the SemEval-2019 task on hyperpartisan news detection. The suggested approach yields accuracy and F1-scores around 0.8 which places the best performing classifier among the top-5 systems in the competition.</abstract>
      <url hash="2485d756">S19-2160</url>
      <doi>10.18653/v1/S19-2160</doi>
      <bibkey>isbister-johansson-2019-dick</bibkey>
    </paper>
    <paper id="165">
      <title>Harvey Mudd College at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: The Clint Buchanan Hyperpartisan News Detector</title>
      <author><first>Mehdi</first><last>Drissi</last></author>
      <author><first>Pedro</first><last>Sandoval Segura</last></author>
      <author><first>Vivaswat</first><last>Ojha</last></author>
      <author><first>Julie</first><last>Medero</last></author>
      <pages>962&#8211;966</pages>
      <abstract>We investigate the recently developed Bidi- rectional Encoder Representations from Transformers (BERT) model (Devlin et al. 2018) for the hyperpartisan news detection task. Using a subset of hand-labeled articles from SemEval as a validation set, we test the performance of different parameters for BERT models. We find that accuracy from two different BERT models using different proportions of the articles is consistently high, with our best-performing model on the validation set achieving 85% accuracy and the best-performing model on the test set achieving 77%. We further determined that our model exhibits strong consistency, labeling independent slices of the same article identically. Finally, we find that randomizing the order of word pieces dramatically reduces validation accuracy (to approximately 60%), but that shuffling groups of four or more word pieces maintains an accuracy of about 80%, indicating the model mainly gains value from local context.</abstract>
      <url hash="b3a582c6">S19-2165</url>
      <doi>10.18653/v1/S19-2165</doi>
      <bibkey>drissi-etal-2019-harvey</bibkey>
      <pwccode url="https://github.com/hmc-cs159-fall2018/final-project-team-mvp-10000" additional="false">hmc-cs159-fall2018/final-project-team-mvp-10000</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/imagenet">ImageNet</pwcdataset>
    </paper>
    <paper id="166">
      <title>Harvey Mudd College at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: The <fixed-case>D</fixed-case>.<fixed-case>X</fixed-case>. Beaumont Hyperpartisan News Detector</title>
      <author><first>Evan</first><last>Amason</last></author>
      <author><first>Jake</first><last>Palanker</last></author>
      <author><first>Mary Clare</first><last>Shen</last></author>
      <author><first>Julie</first><last>Medero</last></author>
      <pages>967&#8211;970</pages>
      <abstract>We use the 600 hand-labelled articles from SemEval Task 4 to hand-tune a classifier with 3000 features for the Hyperpartisan News Detection task. Our final system uses features based on bag-of-words (BoW), analysis of the article title, language complexity, and simple sentiment analysis in a naive Bayes classifier. We trained our final system on the 600,000 articles labelled by publisher. Our final system has an accuracy of 0.653 on the hand-labeled test set. The most effective features are the Automated Readability Index and the presence of certain words in the title. This suggests that hyperpartisan writing uses a distinct writing style, especially in the title.</abstract>
      <url hash="e0760bc0">S19-2166</url>
      <doi>10.18653/v1/S19-2166</doi>
      <bibkey>amason-etal-2019-harvey</bibkey>
    </paper>
    <paper id="170">
      <title>Spider-<fixed-case>J</fixed-case>erusalem at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: Hyperpartisan News Detection</title>
      <author><first>Amal</first><last>Alabdulkarim</last></author>
      <author><first>Tariq</first><last>Alhindi</last></author>
      <pages>985&#8211;989</pages>
      <abstract>This paper describes our system for detecting hyperpartisan news articles, which was submitted for the shared task in SemEval 2019 on Hyperpartisan News Detection. We developed a Support Vector Machine (SVM) model that uses TF-IDF of tokens, Language Inquiry and Word Count (LIWC) features, and structural features such as number of paragraphs and hyperlink count in an article. The model was trained on 645 articles from two classes: mainstream and hyperpartisan. Our system was ranked seventeenth out of forty two participating teams in the binary classification task with an accuracy score of 0.742 on the blind test set (the accuracy of the top ranked system was 0.822). We provide a detailed description of our preprocessing steps, discussion of our experiments using different combinations of features, and analysis of our results and prediction errors.</abstract>
      <url hash="5fbe5431">S19-2170</url>
      <doi>10.18653/v1/S19-2170</doi>
      <bibkey>alabdulkarim-alhindi-2019-spider</bibkey>
    </paper>
    <paper id="171">
      <title>Steve <fixed-case>M</fixed-case>artin at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: Ensemble Learning Model for Detecting Hyperpartisan News</title>
      <author><first>Youngjun</first><last>Joo</last></author>
      <author><first>Inchon</first><last>Hwang</last></author>
      <pages>990&#8211;994</pages>
      <abstract>This paper describes our submission to task 4 in SemEval 2019, i.e., hyperpartisan news detection. Our model aims at detecting hyperpartisan news by incorporating the style-based features and the content-based features. We extract a broad number of feature sets and use as our learning algorithms the GBDT and the n-gram CNN model. Finally, we apply the weighted average for effective learning between the two models. Our model achieves an accuracy of 0.745 on the test set in subtask A.</abstract>
      <url hash="4b5936a3">S19-2171</url>
      <attachment type="supplementary" hash="fcfbfd16">S19-2171.Supplementary.pdf</attachment>
      <doi>10.18653/v1/S19-2171</doi>
      <bibkey>joo-hwang-2019-steve</bibkey>
    </paper>
    <paper id="173">
      <title>Team Fernando-Pessa at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: Back to Basics in Hyperpartisan News Detection</title>
      <author><first>Andr&#233;</first><last>Cruz</last></author>
      <author><first>Gil</first><last>Rocha</last></author>
      <author><first>Rui</first><last>Sousa-Silva</last></author>
      <author><first>Henrique</first><last>Lopes Cardoso</last></author>
      <pages>999&#8211;1003</pages>
      <abstract>This paper describes our submission to the SemEval 2019 Hyperpartisan News Detection task. Our system aims for a linguistics-based document classification from a minimal set of interpretable features, while maintaining good performance. To this goal, we follow a feature-based approach and perform several experiments with different machine learning classifiers. Additionally, we explore feature importances and distributions among the two classes. On the main task, our model achieved an accuracy of 71.7%, which was improved after the task&#8217;s end to 72.9%. We also participate on the meta-learning sub-task, for classifying documents with the binary classifications of all submitted systems as input, achieving an accuracy of 89.9%.</abstract>
      <url hash="d541abb7">S19-2173</url>
      <doi>10.18653/v1/S19-2173</doi>
      <bibkey>cruz-etal-2019-team</bibkey>
    </paper>
    <paper id="176">
      <title>Team Jack Ryder at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: Using <fixed-case>BERT</fixed-case> Representations for Detecting Hyperpartisan News</title>
      <author><first>Daniel</first><last>Shaprin</last></author>
      <author><first>Giovanni</first><last>Da San Martino</last></author>
      <author><first>Alberto</first><last>Barr&#243;n-Cede&#241;o</last></author>
      <author><first>Preslav</first><last>Nakov</last></author>
      <pages>1012&#8211;1015</pages>
      <abstract>We describe the system submitted by the Jack Ryder team to SemEval-2019 Task 4 on Hyperpartisan News Detection. The task asked participants to predict whether a given article is hyperpartisan, i.e., extreme-left or extreme-right. We proposed an approach based on BERT with fine-tuning, which was ranked 7th out 28 teams on the distantly supervised dataset, where all articles from a hyperpartisan/non-hyperpartisan news outlet are considered to be hyperpartisan/non-hyperpartisan. On a manually annotated test dataset, where human annotators double-checked the labels, we were ranked 29th out of 42 teams.</abstract>
      <url hash="4146e431">S19-2176</url>
      <doi>10.18653/v1/S19-2176</doi>
      <bibkey>shaprin-etal-2019-team</bibkey>
    </paper>
    <paper id="178">
      <title>Team Kit Kittredge at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: <fixed-case>LSTM</fixed-case> Voting System</title>
      <author><first>Rebekah</first><last>Cramerus</last></author>
      <author><first>Tatjana</first><last>Scheffler</last></author>
      <pages>1021&#8211;1025</pages>
      <abstract>This paper describes the approach of team Kit Kittredge to SemEval-2019 Task 4: Hyperpartisan News Detection. The goal was binary classification of news articles into the categories of &#8220;biased&#8221; or &#8220;unbiased&#8221;. We had two software submissions: one a simple bag-of-words model, and the second an LSTM (Long Short Term Memory) neural network, which was trained on a subset of the original dataset selected by a voting system of other LSTMs. This method did not prove much more successful than the baseline, however, due to the models&#8217; tendency to learn publisher-specific traits instead of general bias.</abstract>
      <url hash="1aa432e3">S19-2178</url>
      <doi>10.18653/v1/S19-2178</doi>
      <bibkey>cramerus-scheffler-2019-team</bibkey>
    </paper>
    <paper id="180">
      <title>Team Peter Brinkmann at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: Detecting Biased News Articles Using Convolutional Neural Networks</title>
      <author><first>Michael</first><last>F&#228;rber</last></author>
      <author><first>Agon</first><last>Qurdina</last></author>
      <author><first>Lule</first><last>Ahmedi</last></author>
      <pages>1032&#8211;1036</pages>
      <abstract>In this paper, we present an approach for classifying news articles as biased (i.e., hyperpartisan) or unbiased, based on a convolutional neural network. We experiment with various embedding methods (pretrained and trained on the training dataset) and variations of the convolutional neural network architecture and compare the results. When evaluating our best performing approach on the actual test data set of the SemEval 2019 Task 4, we obtained relatively low precision and accuracy values, while gaining the highest recall rate among all 42 participating teams.</abstract>
      <url hash="3dfbdeff">S19-2180</url>
      <doi>10.18653/v1/S19-2180</doi>
      <bibkey>farber-etal-2019-team</bibkey>
      <pwccode url="https://github.com/michaelfaerber/SemEval2019-Task4" additional="false">michaelfaerber/SemEval2019-Task4</pwccode>
    </paper>
    <paper id="181">
      <title>Team Peter-Parker at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: <fixed-case>BERT</fixed-case>-Based Method in Hyperpartisan News Detection</title>
      <author><first>Zhiyuan</first><last>Ning</last></author>
      <author><first>Yuanzhen</first><last>Lin</last></author>
      <author><first>Ruichao</first><last>Zhong</last></author>
      <pages>1037&#8211;1040</pages>
      <abstract>This paper describes the team peter-parker&#8217;s participation in Hyperpartisan News Detection task (SemEval-2019 Task 4), which requires to classify whether a given news article is bias or not. We decided to use JAVA to do the article parsing tool and the BERT-Based model to do the bias prediction. Furthermore, we will show experiment results with analysis.</abstract>
      <url hash="525caeb8">S19-2181</url>
      <doi>10.18653/v1/S19-2181</doi>
      <bibkey>ning-etal-2019-team</bibkey>
    </paper>
    <paper id="183">
      <title>Team Xenophilius Lovegood at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: Hyperpartisanship Classification using Convolutional Neural Networks</title>
      <author><first>Albin</first><last>Zehe</last></author>
      <author><first>Lena</first><last>Hettinger</last></author>
      <author><first>Stefan</first><last>Ernst</last></author>
      <author><first>Christian</first><last>Hauptmann</last></author>
      <author><first>Andreas</first><last>Hotho</last></author>
      <pages>1047&#8211;1051</pages>
      <abstract>This paper describes our system for the SemEval 2019 Task 4 on hyperpartisan news detection. We build on an existing deep learning approach for sentence classification based on a Convolutional Neural Network. Modifying the original model with additional layers to increase its expressiveness and finally building an ensemble of multiple versions of the model, we obtain an accuracy of 67.52% and an F1 score of 73.78% on the main test dataset. We also report on additional experiments incorporating handcrafted features into the CNN and using it as a feature extractor for a linear SVM.</abstract>
      <url hash="8a20b7c0">S19-2183</url>
      <doi>10.18653/v1/S19-2183</doi>
      <bibkey>zehe-etal-2019-team</bibkey>
    </paper>
    <paper id="185">
      <title>The Sally Smedley Hyperpartisan News Detector at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4</title>
      <author><first>Kazuaki</first><last>Hanawa</last></author>
      <author><first>Shota</first><last>Sasaki</last></author>
      <author><first>Hiroki</first><last>Ouchi</last></author>
      <author><first>Jun</first><last>Suzuki</last></author>
      <author><first>Kentaro</first><last>Inui</last></author>
      <pages>1057&#8211;1061</pages>
      <abstract>This paper describes our system submitted to the formal run of SemEval-2019 Task 4: Hyperpartisan news detection. Our system is based on a linear classifier using several features, i.e., 1) embedding features based on the pre-trained BERT embeddings, 2) article length features, and 3) embedding features of informative phrases extracted from by-publisher dataset. Our system achieved 80.9% accuracy on the test set for the formal run and got the 3rd place out of 42 teams.</abstract>
      <url hash="5070a922">S19-2185</url>
      <doi>10.18653/v1/S19-2185</doi>
      <bibkey>hanawa-etal-2019-sally</bibkey>
    </paper>
    <paper id="186">
      <title>Tintin at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: Detecting Hyperpartisan News Article with only Simple Tokens</title>
      <author><first>Yves</first><last>Bestgen</last></author>
      <pages>1062&#8211;1066</pages>
      <abstract>Tintin, the system proposed by the CECL for the Hyperpartisan News Detection task of SemEval 2019, is exclusively based on the tokens that make up the documents and a standard supervised learning procedure. It obtained very contrasting results: poor on the main task, but much more effective at distinguishing documents published by hyperpartisan media outlets from unbiased ones, as it ranked first. An analysis of the most important features highlighted the positive aspects, but also some potential limitations of the approach.</abstract>
      <url hash="c68f0cc5">S19-2186</url>
      <doi>10.18653/v1/S19-2186</doi>
      <bibkey>bestgen-2019-tintin</bibkey>
    </paper>
    <paper id="189">
      <title>Vernon-fenwick at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 4: Hyperpartisan News Detection using Lexical and Semantic Features</title>
      <author><first>Vertika</first><last>Srivastava</last></author>
      <author><first>Ankita</first><last>Gupta</last></author>
      <author><first>Divya</first><last>Prakash</last></author>
      <author><first>Sudeep Kumar</first><last>Sahoo</last></author>
      <author><first>Rohit</first><last>R.R</last></author>
      <author><first>Yeon Hyang</first><last>Kim</last></author>
      <pages>1078&#8211;1082</pages>
      <abstract>In this paper, we present our submission for SemEval-2019 Task 4: Hyperpartisan News Detection. Hyperpartisan news articles are sharply polarized and extremely biased (onesided). It shows blind beliefs, opinions and unreasonable adherence to a party, idea, faction or a person. Through this task, we aim to develop an automated system that can be used to detect hyperpartisan news and serve as a prescreening technique for fake news detection. The proposed system jointly uses a rich set of handcrafted textual and semantic features. Our system achieved 2nd rank on the primary metric (82.0% accuracy) and 1st rank on the secondary metric (82.1% F1-score), among all participating teams. Comparison with the best performing system on the leaderboard shows that our system is behind by only 0.2% absolute difference in accuracy.</abstract>
      <url hash="70a20b90">S19-2189</url>
      <doi>10.18653/v1/S19-2189</doi>
      <bibkey>srivastava-etal-2019-vernon</bibkey>
    </paper>
    <paper id="191">
      <title><fixed-case>BLCU</fixed-case>_<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 7: An Inference Chain-based <fixed-case>GPT</fixed-case> Model for Rumour Evaluation</title>
      <author><first>Ruoyao</first><last>Yang</last></author>
      <author><first>Wanying</first><last>Xie</last></author>
      <author><first>Chunhua</first><last>Liu</last></author>
      <author><first>Dong</first><last>Yu</last></author>
      <pages>1090&#8211;1096</pages>
      <abstract>Researchers have been paying increasing attention to rumour evaluation due to the rapid spread of unsubstantiated rumours on social media platforms, including SemEval 2019 task 7. However, labelled data for learning rumour veracity is scarce, and labels in rumour stance data are highly disproportionate, making it challenging for a model to perform supervised-learning adequately. We propose an inference chain-based system, which fully utilizes conversation structure-based knowledge in the limited data and expand the training data in minority categories to alleviate class imbalance. Our approach obtains 12.6% improvement upon the baseline system for subtask A, ranks 1st among 21 systems in subtask A, and ranks 4th among 12 systems in subtask B.</abstract>
      <url hash="f419313f">S19-2191</url>
      <doi>10.18653/v1/S19-2191</doi>
      <bibkey>yang-etal-2019-blcu</bibkey>
    </paper>
    <paper id="193">
      <title><fixed-case>CLEAR</fixed-case>umor at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 7: <fixed-case>C</fixed-case>onvo<fixed-case>L</fixed-case>ving <fixed-case>ELM</fixed-case>o Against Rumors</title>
      <author><first>Ipek</first><last>Baris</last></author>
      <author><first>Lukas</first><last>Schmelzeisen</last></author>
      <author><first>Steffen</first><last>Staab</last></author>
      <pages>1105&#8211;1109</pages>
      <abstract>This paper describes our submission to SemEval-2019 Task 7: RumourEval: Determining Rumor Veracity and Support for Rumors. We participated in both subtasks. The goal of subtask A is to classify the type of interaction between a rumorous social media post and a reply post as support, query, deny, or comment. The goal of subtask B is to predict the veracity of a given rumor. For subtask A, we implement a CNN-based neural architecture using ELMo embeddings of post text combined with auxiliary features and achieve a F1-score of 44.6%. For subtask B, we employ a MLP neural network leveraging our estimates for subtask A and achieve a F1-score of 30.1% (second place in the competition). We provide results and analysis of our system performance and present ablation experiments.</abstract>
      <url hash="049a561a">S19-2193</url>
      <doi>10.18653/v1/S19-2193</doi>
      <bibkey>baris-etal-2019-clearumor</bibkey>
      <pwccode url="https://github.com/lschmelzeisen/clearumor" additional="false">lschmelzeisen/clearumor</pwccode>
    </paper>
    <paper id="195">
      <title><fixed-case>GWU</fixed-case> <fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 7: Hybrid Pipeline for Rumour Veracity and Stance Classification on Social Media</title>
      <author><first>Sardar</first><last>Hamidian</last></author>
      <author><first>Mona</first><last>Diab</last></author>
      <pages>1115&#8211;1119</pages>
      <abstract>Social media plays a crucial role as the main resource news for information seekers online. However, the unmoderated feature of social media platforms lead to the emergence and spread of untrustworthy contents which harm individuals or even societies. Most of the current automated approaches for automatically determining the veracity of a rumor are not generalizable for novel emerging topics. This paper describes our hybrid system comprising rules and a machine learning model which makes use of replied tweets to identify the veracity of the source tweet. The proposed system in this paper achieved 0.435 F-Macro in stance classification, and 0.262 F-macro and 0.801 RMSE in rumor verification tasks in Task7 of SemEval 2019.</abstract>
      <url hash="bf5545ce">S19-2195</url>
      <doi>10.18653/v1/S19-2195</doi>
      <bibkey>hamidian-diab-2019-gwu</bibkey>
    </paper>
    <paper id="196">
      <title><fixed-case>SINAI</fixed-case>-<fixed-case>DL</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 7: Data Augmentation and Temporal Expressions</title>
      <author><first>Miguel A.</first><last>Garc&#237;a-Cumbreras</last></author>
      <author><first>Salud Mar&#237;a</first><last>Jim&#233;nez-Zafra</last></author>
      <author><first>Arturo</first><last>Montejo-R&#225;ez</last></author>
      <author><first>Manuel Carlos</first><last>D&#237;az-Galiano</last></author>
      <author><first>Estela</first><last>Saquete</last></author>
      <pages>1120&#8211;1124</pages>
      <abstract>This paper describes the participation of the SINAI-DL team at RumourEval (Task 7 in SemEval 2019, subtask A: SDQC). SDQC addresses the challenge of rumour stance classification as an indirect way of identifying potential rumours. Given a tweet with several replies, our system classifies each reply into either supporting, denying, questioning or commenting on the underlying rumours. We have applied data augmentation, temporal expressions labelling and transfer learning with a four-layer neural classifier. We achieve an accuracy of 0.715 with the official run over reply tweets.</abstract>
      <url hash="c2dad255">S19-2196</url>
      <doi>10.18653/v1/S19-2196</doi>
      <bibkey>garcia-cumbreras-etal-2019-sinai</bibkey>
    </paper>
    <paper id="197">
      <title><fixed-case>UPV</fixed-case>-28-<fixed-case>UNITO</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 7: Exploiting Post&#8217;s Nesting and Syntax Information for Rumor Stance Classification</title>
      <author><first>Bilal</first><last>Ghanem</last></author>
      <author><first>Alessandra Teresa</first><last>Cignarella</last></author>
      <author><first>Cristina</first><last>Bosco</last></author>
      <author><first>Paolo</first><last>Rosso</last></author>
      <author><first>Francisco Manuel</first><last>Rangel Pardo</last></author>
      <pages>1125&#8211;1131</pages>
      <abstract>In the present paper we describe the UPV-28-UNITO system&#8217;s submission to the RumorEval 2019 shared task. The approach we applied for addressing both the subtasks of the contest exploits both classical machine learning algorithms and word embeddings, and it is based on diverse groups of features: stylistic, lexical, emotional, sentiment, meta-structural and Twitter-based. A novel set of features that take advantage of the syntactic information in texts is moreover introduced in the paper.</abstract>
      <url hash="cfe2890a">S19-2197</url>
      <doi>10.18653/v1/S19-2197</doi>
      <bibkey>ghanem-etal-2019-upv</bibkey>
    </paper>
    <paper id="200">
      <title><fixed-case>C</fixed-case>olumbia<fixed-case>NLP</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 8: The Answer is Language Model Fine-tuning</title>
      <author><first>Tuhin</first><last>Chakrabarty</last></author>
      <author><first>Smaranda</first><last>Muresan</last></author>
      <pages>1144&#8211;1148</pages>
      <abstract>Community Question Answering forums are very popular nowadays, as they represent effective means for communities to share information around particular topics. But the information shared on these forums are often not authentic. This paper presents the ColumbiaNLP submission for the SemEval-2019 Task 8: Fact-Checking in Community Question Answering Forums. We show how fine-tuning a language model on a large unannotated corpus of old threads from Qatar Living forum helps us to classify question types (factual, opinion, socializing) and to judge the factuality of answers on the shared task labeled data from the same forum. Our system finished 4th and 2nd on Subtask A (question type classification) and B (answer factuality prediction), respectively, based on the official metric of accuracy.</abstract>
      <url hash="9c353085">S19-2200</url>
      <doi>10.18653/v1/S19-2200</doi>
      <bibkey>chakrabarty-muresan-2019-columbianlp</bibkey>
    </paper>
    <paper id="203">
      <title>Fermi at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 8: An elementary but effective approach to Question Discernment in Community <fixed-case>QA</fixed-case> Forums</title>
      <author><first>Bakhtiyar</first><last>Syed</last></author>
      <author><first>Vijayasaradhi</first><last>Indurthi</last></author>
      <author><first>Manish</first><last>Shrivastava</last></author>
      <author><first>Manish</first><last>Gupta</last></author>
      <author><first>Vasudeva</first><last>Varma</last></author>
      <pages>1160&#8211;1164</pages>
      <abstract>Online Community Question Answering Forums (cQA) have gained massive popularity within recent years. The rise in users for such forums have led to the increase in the need for automated evaluation for question comprehension and fact evaluation of the answers provided by various participants in the forum. Our team, <b>Fermi</b>, participated in sub-task A of Task 8 at SemEval 2019 - which tackles the first problem in the pipeline of factual evaluation in cQA forums, i.e., deciding whether a posed question asks for a factual information, an opinion/advice or is just socializing. This information is highly useful in segregating factual questions from non-factual ones which highly helps in organizing the questions into useful categories and trims down the problem space for the next task in the pipeline for fact evaluation among the available answers. Our system uses the embeddings obtained from Universal Sentence Encoder combined with XGBoost for the classification sub-task A. We also evaluate other combinations of embeddings and off-the-shelf machine learning algorithms to demonstrate the efficacy of the various representations and their combinations. Our results across the evaluation test set gave an accuracy of 84% and received the first position in the final standings judged by the organizers.</abstract>
      <url hash="a2b7b8cd">S19-2203</url>
      <doi>10.18653/v1/S19-2203</doi>
      <bibkey>syed-etal-2019-fermi</bibkey>
    </paper>
    <paper id="206">
      <title><fixed-case>T</fixed-case>ue<fixed-case>F</fixed-case>act at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val 2019 Task 8: Fact checking in community question answering forums: context matters</title>
      <author><first>R&#233;ka</first><last>Juh&#225;sz</last></author>
      <author><first>Franziska Barbara</first><last>Linnenschmidt</last></author>
      <author><first>Teslin</first><last>Roys</last></author>
      <pages>1176&#8211;1179</pages>
      <abstract>The SemEval 2019 Task 8 on Fact-Checking in community question answering forums aimed to classify questions into categories and verify the correctness of answers given on the QatarLiving public forum. The task was divided into two subtasks: the first classifying the question, the second the answers. The TueFact system described in this paper used different approaches for the two subtasks. Subtask A makes use of word vectors based on a bag-of-word-ngram model using up to trigrams. Predictions are done using multi-class logistic regression. The official SemEval result lists an accuracy of 0.60. Subtask B uses vectorized character n-grams up to trigrams instead. Predictions are done using a LSTM model and achieved an accuracy of 0.53 on the final SemEval Task 8 evaluation set.</abstract>
      <url hash="d35e7342">S19-2206</url>
      <doi>10.18653/v1/S19-2206</doi>
      <bibkey>juhasz-etal-2019-tuefact</bibkey>
    </paper>
    <paper id="207">
      <title><fixed-case>YNU</fixed-case>-<fixed-case>HPCC</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 8: Using A <fixed-case>LSTM</fixed-case>-Attention Model for Fact-Checking in Community Forums</title>
      <author><first>Peng</first><last>Liu</last></author>
      <author><first>Jin</first><last>Wang</last></author>
      <author><first>Xuejie</first><last>Zhang</last></author>
      <pages>1180&#8211;1184</pages>
      <abstract>We propose a system that uses a long short-term memory with attention mechanism (LSTM-Attention) model to complete the task. The LSTM-Attention model uses two LSTM to extract the features of the question and answer pair. Then, each of the features is sequentially composed using the attention mechanism, concatenating the two vectors into one. Finally, the concatenated vector is used as input for the MLP and the MLP&#8217;s output layer uses the softmax function to classify the provided answers into three categories. This model is capable of extracting the features of the question and answer pair well. The results show that the proposed system outperforms the baseline algorithm.</abstract>
      <url hash="1d3d6714">S19-2207</url>
      <doi>10.18653/v1/S19-2207</doi>
      <bibkey>liu-etal-2019-ynu</bibkey>
    </paper>
    <paper id="213">
      <title><fixed-case>MIDAS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 9: Suggestion Mining from Online Reviews using <fixed-case>ULMF</fixed-case>it</title>
      <author><first>Sarthak</first><last>Anand</last></author>
      <author><first>Debanjan</first><last>Mahata</last></author>
      <author><first>Kartik</first><last>Aggarwal</last></author>
      <author><first>Laiba</first><last>Mehnaz</last></author>
      <author><first>Simra</first><last>Shahid</last></author>
      <author><first>Haimin</first><last>Zhang</last></author>
      <author><first>Yaman</first><last>Kumar</last></author>
      <author><first>Rajiv</first><last>Shah</last></author>
      <author><first>Karan</first><last>Uppal</last></author>
      <pages>1213&#8211;1217</pages>
      <abstract>In this paper we present our approach to tackle the Suggestion Mining from Online Reviews and Forums Sub-Task A. Given a review, we are asked to predict whether the review consists of a suggestion or not. Our model is based on Universal Language Model Fine-tuning for Text Classification. We apply various pre-processing techniques before training the language and the classification model. We further provide analysis of the model. Our team ranked 10th out of 34 participants, achieving an F1 score of 0.7011.</abstract>
      <url hash="a42ef3c3">S19-2213</url>
      <doi>10.18653/v1/S19-2213</doi>
      <bibkey>anand-etal-2019-midas</bibkey>
    </paper>
    <paper id="215">
      <title><fixed-case>NTUA</fixed-case>-<fixed-case>ISL</fixed-case>ab at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 9: Mining Suggestions in the wild</title>
      <author><first>Rolandos Alexandros</first><last>Potamias</last></author>
      <author><first>Alexandros</first><last>Neofytou</last></author>
      <author><first>Georgios</first><last>Siolas</last></author>
      <pages>1224&#8211;1230</pages>
      <abstract>As online customer forums and product comparison sites increase their societal influence, users are actively expressing their opinions and posting their recommendations on their fellow customers online. However, systems capable of recognizing suggestions still lack in stability. Suggestion Mining, a novel and challenging field of Natural Language Processing, is increasingly gaining attention, aiming to track user advice on online forums. In this paper, a carefully designed methodology to identify customer-to-company and customer-to-customer suggestions is presented. The methodology implements a rule-based classifier using heuristic, lexical and syntactic patterns. The approach ranked at 5th and 1st position, achieving an f1-score of 0.749 and 0.858 for SemEval-2019/Suggestion Mining sub-tasks A and B, respectively. In addition, we were able to improve performance results by combining the rule-based classifier with a recurrent convolutional neural network, that exhibits an f1-score of 0.79 for subtask A.</abstract>
      <url hash="ce3f5cce">S19-2215</url>
      <doi>10.18653/v1/S19-2215</doi>
      <bibkey>potamias-etal-2019-ntua</bibkey>
    </paper>
    <paper id="217">
      <title><fixed-case>SSN</fixed-case>-<fixed-case>SPARKS</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 9: Mining Suggestions from Online Reviews using Deep Learning Techniques on Augmented Data</title>
      <author><first>Rajalakshmi</first><last>S</last></author>
      <author><first>Angel</first><last>Suseelan</last></author>
      <author><first>S Milton</first><last>Rajendram</last></author>
      <author><first>Mirnalinee</first><last>T T</last></author>
      <pages>1237&#8211;1241</pages>
      <abstract>This paper describes the work on mining the suggestions from online reviews and forums. Opinion mining detects whether the comments are positive, negative or neutral, while suggestion mining explores the review content for the possible tips or advice. The system developed by SSN-SPARKS team in SemEval-2019 for task 9 (suggestion mining) uses a rule-based approach for feature selection, SMOTE technique for data augmentation and deep learning technique (Convolutional Neural Network) for classification. We have compared the results with Random Forest classifier (RF) and MultiLayer Perceptron (MLP) model. Results show that the CNN model performs better than other models for both the subtasks.</abstract>
      <url hash="892abf9f">S19-2217</url>
      <doi>10.18653/v1/S19-2217</doi>
      <bibkey>s-etal-2019-ssn</bibkey>
    </paper>
    <paper id="218">
      <title>Suggestion Miner at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 9: Suggestion Detection in Online Forum using Word Graph</title>
      <author><first>Usman</first><last>Ahmed</last></author>
      <author><first>Humera</first><last>Liaquat</last></author>
      <author><first>Luqman</first><last>Ahmed</last></author>
      <author><first>Syed Jawad</first><last>Hussain</last></author>
      <pages>1242&#8211;1246</pages>
      <abstract>This paper describes the suggestion miner system that participates in SemEval 2019 Task 9 - SubTask A - Suggestion Mining from Online Reviews and Forums. The system participated in the subtasks A. This paper discusses the results of our system in the development, evaluation and post evaluation. Each class in the dataset is represented as directed unweighted graphs. Then, the comparison is carried out with each class graph which results in a vector. This vector is used as features by a machine learning algorithm. The model is evaluated on hold on strategy. The organizers randomly split (8500 instances) training set (provided to the participant in training their system) and testing set (833 instances). The test set is reserved to evaluate the performance of participants systems. During the evaluation, our system ranked 31 in the Coda Lab result of the subtask A (binary class problem). The binary class system achieves evaluation value 0.34, precision 0.87, recall 0.73 and F measure 0.78.</abstract>
      <url hash="6476fdf0">S19-2218</url>
      <doi>10.18653/v1/S19-2218</doi>
      <bibkey>ahmed-etal-2019-suggestion</bibkey>
    </paper>
    <paper id="220">
      <title><fixed-case>T</fixed-case>his<fixed-case>I</fixed-case>s<fixed-case>C</fixed-case>ompetition at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 9: <fixed-case>BERT</fixed-case> is unstable for out-of-domain samples</title>
      <author><first>Cheoneum</first><last>Park</last></author>
      <author><first>Juae</first><last>Kim</last></author>
      <author><first>Hyeon-gu</first><last>Lee</last></author>
      <author><first>Reinald Kim</first><last>Amplayo</last></author>
      <author><first>Harksoo</first><last>Kim</last></author>
      <author><first>Jungyun</first><last>Seo</last></author>
      <author><first>Changki</first><last>Lee</last></author>
      <pages>1254&#8211;1261</pages>
      <abstract>This paper describes our system, Joint Encoders for Stable Suggestion Inference (JESSI), for the SemEval 2019 Task 9: Suggestion Mining from Online Reviews and Forums. JESSI is a combination of two sentence encoders: (a) one using multiple pre-trained word embeddings learned from log-bilinear regression (GloVe) and translation (CoVe) models, and (b) one on top of word encodings from a pre-trained deep bidirectional transformer (BERT). We include a domain adversarial training module when training for out-of-domain samples. Our experiments show that while BERT performs exceptionally well for in-domain samples, several runs of the model show that it is unstable for out-of-domain samples. The problem is mitigated tremendously by (1) combining BERT with a non-BERT encoder, and (2) using an RNN-based classifier on top of BERT. Our final models obtained second place with 77.78% F-Score on Subtask A (i.e. in-domain) and achieved an F-Score of 79.59% on Subtask B (i.e. out-of-domain), even without using any additional external data.</abstract>
      <url hash="c9669a8f">S19-2220</url>
      <doi>10.18653/v1/S19-2220</doi>
      <bibkey>park-etal-2019-thisiscompetition</bibkey>
    </paper>
    <paper id="222">
      <title>Yimmon at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 9: Suggestion Mining with Hybrid Augmented Approaches</title>
      <author><first>Yimeng</first><last>Zhuang</last></author>
      <pages>1267&#8211;1271</pages>
      <abstract>Suggestion mining task aims to extract tips, advice, and recommendations from unstructured text. The task includes many challenges, such as class imbalance, figurative expressions, context dependency, and long and complex sentences. This paper gives a detailed system description of our submission in SemEval 2019 Task 9 Subtask A. We transfer Self-Attention Network (SAN), a successful model in machine reading comprehension field, into this task. Our model concentrates on modeling long-term dependency which is indispensable to parse long and complex sentences. Besides, we also adopt techniques, such as contextualized embedding, back-translation, and auxiliary loss, to augment the system. Our model achieves a performance of F1=76.3, and rank 4th among 34 participating systems. Further ablation study shows that the techniques used in our system are beneficial to the performance.</abstract>
      <url hash="613c2b7e">S19-2222</url>
      <doi>10.18653/v1/S19-2222</doi>
      <bibkey>zhuang-2019-yimmon</bibkey>
    </paper>
    <paper id="223">
      <title><fixed-case>YNU</fixed-case>_<fixed-case>DYX</fixed-case> at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 9: A Stacked <fixed-case>B</fixed-case>i<fixed-case>LSTM</fixed-case> for Suggestion Mining Classification</title>
      <author><first>Yunxia</first><last>Ding</last></author>
      <author><first>Xiaobing</first><last>Zhou</last></author>
      <author><first>Xuejie</first><last>Zhang</last></author>
      <pages>1272&#8211;1276</pages>
      <abstract>In this paper we describe a deep-learning system that competed as SemEval 2019 Task 9-SubTask A: Suggestion Mining from Online Reviews and Forums. We use Word2Vec to learn the distributed representations from sentences. This system is composed of a Stacked Bidirectional Long-Short Memory Network (SBiLSTM) for enriching word representations before and after the sequence relationship with context. We perform an ensemble to improve the effectiveness of our model. Our official submission results achieve an F1-score 0.5659.</abstract>
      <url hash="a808aaff">S19-2223</url>
      <doi>10.18653/v1/S19-2223</doi>
      <bibkey>ding-etal-2019-ynu-dyx</bibkey>
    </paper>
    <paper id="225">
      <title>Zoho at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 9: Semi-supervised Domain Adaptation using Tri-training for Suggestion Mining</title>
      <author><first>Sai</first><last>Prasanna</last></author>
      <author><first>Sri Ananda</first><last>Seelan</last></author>
      <pages>1282&#8211;1286</pages>
      <abstract>This paper describes our submission for the SemEval-2019 Suggestion Mining task. A simple Convolutional Neural Network (CNN) classifier with contextual word representations from a pre-trained language model was used for sentence classification. The model is trained using tri-training, a semi-supervised bootstrapping mechanism for labelling unseen data. Tri-training proved to be an effective technique to accommodate domain shift for cross-domain suggestion mining (Subtask B) where there is no hand labelled training data. For in-domain evaluation (Subtask A), we use the same technique to augment the training set. Our system ranks thirteenth in Subtask A with an F1-score of 68.07 and third in Subtask B with an F1-score of 81.94.</abstract>
      <url hash="1b986c2e">S19-2225</url>
      <attachment type="software" hash="af26406c">S19-2225.Software.zip</attachment>
      <attachment type="poster" hash="2c18a839">S19-2225.Poster.pdf</attachment>
      <doi>10.18653/v1/S19-2225</doi>
      <bibkey>prasanna-seelan-2019-zoho</bibkey>
    </paper>
    <paper id="231">
      <title><fixed-case>U</fixed-case>ni<fixed-case>M</fixed-case>elb at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 12: Multi-model combination for toponym resolution</title>
      <author><first>Haonan</first><last>Li</last></author>
      <author><first>Minghan</first><last>Wang</last></author>
      <author><first>Timothy</first><last>Baldwin</last></author>
      <author><first>Martin</first><last>Tomko</last></author>
      <author><first>Maria</first><last>Vasardani</last></author>
      <pages>1313&#8211;1318</pages>
      <abstract>This paper describes our submission to SemEval-2019 Task 12 on toponym resolution over scientific articles. We train separate NER models for toponym detection over text extracted from tables vs. text from the body of the paper, and train another auxiliary model to eliminate misdetected toponyms. For toponym disambiguation, we use an SVM classifier with hand-engineered features. The best setting achieved a strict micro-F1 score of 80.92% and overlap micro-F1 score of 86.88% in the toponym detection subtask, ranking 2nd out of 8 teams on F1 score. For toponym disambiguation and end-to-end resolution, we officially ranked 2nd and 3rd, respectively.</abstract>
      <url hash="0a5963db">S19-2231</url>
      <doi>10.18653/v1/S19-2231</doi>
      <bibkey>li-etal-2019-unimelb</bibkey>
    </paper>
    <paper id="232">
      <title><fixed-case>U</fixed-case>niversity of <fixed-case>A</fixed-case>rizona at <fixed-case>S</fixed-case>em<fixed-case>E</fixed-case>val-2019 Task 12: Deep-Affix Named Entity Recognition of Geolocation Entities</title>
      <author><first>Vikas</first><last>Yadav</last></author>
      <author><first>Egoitz</first><last>Laparra</last></author>
      <author><first>Ti-Tai</first><last>Wang</last></author>
      <author><first>Mihai</first><last>Surdeanu</last></author>
      <author><first>Steven</first><last>Bethard</last></author>
      <pages>1319&#8211;1323</pages>
      <abstract>We present the Named Entity Recognition (NER) and disambiguation model used by the University of Arizona team (UArizona) for the SemEval 2019 task 12. We achieved fourth place on tasks 1 and 3. We implemented a deep-affix based LSTM-CRF NER model for task 1, which utilizes only character, word, pre- fix and suffix information for the identification of geolocation entities. Despite using just the training data provided by task organizers and not using any lexicon features, we achieved 78.85% strict micro F-score on task 1. We used the unsupervised population heuristics for task 3 and achieved 52.99% strict micro-F1 score in this task.</abstract>
      <url hash="e63fb91c">S19-2232</url>
      <doi>10.18653/v1/S19-2232</doi>
      <bibkey>yadav-etal-2019-university</bibkey>
    </paper>
  </volume>
</collection>