<?xml version='1.0' encoding='utf-8'?>
<collection id="2020.nlposs">
  <volume id="1" ingest-date="2020-11-06">
    <meta>
      <booktitle>Proceedings of Second Workshop for NLP Open Source Software (NLP-OSS)</booktitle>
      <editor><first>Eunjeong L.</first><last>Park</last></editor>
      <editor><first>Masato</first><last>Hagiwara</last></editor>
      <editor><first>Dmitrijs</first><last>Milajevs</last></editor>
      <editor><first>Nelson F.</first><last>Liu</last></editor>
      <editor><first>Geeticka</first><last>Chauhan</last></editor>
      <editor><first>Liling</first><last>Tan</last></editor>
      <publisher>Association for Computational Linguistics</publisher>
      <address>Online</address>
      <month>November</month>
      <year>2020</year>
    </meta>
    <frontmatter>
      <url hash="ba8bcc58">2020.nlposs-1.0</url>
      <bibkey>nlposs-2020-nlp</bibkey>
    </frontmatter>
    <paper id="4">
      <title>End-to-end NLP Pipelines in Rust<fixed-case>NLP</fixed-case> Pipelines in Rust</title>
      <author><first>Guillaume</first><last>Becquin</last></author>
      <pages>20–25</pages>
      <abstract>The recent progress in <a href="https://en.wikipedia.org/wiki/Natural_language_processing">natural language processing</a> research has been supported by the development of a rich open source ecosystem in <a href="https://en.wikipedia.org/wiki/Python_(programming_language)">Python</a>. Libraries allowing NLP practitioners but also non-specialists to leverage state-of-the-art models have been instrumental in the democratization of this technology. The maturity of the open-source NLP ecosystem however varies between languages. This work proposes a new <a href="https://en.wikipedia.org/wiki/Open-source_software">open-source library</a> aimed at bringing state-of-the-art <a href="https://en.wikipedia.org/wiki/Natural_language_processing">NLP</a> to <a href="https://en.wikipedia.org/wiki/Rust_(programming_language)">Rust</a>. Rust is a <a href="https://en.wikipedia.org/wiki/Systems_programming">systems programming language</a> for which the foundations required to build machine learning applications are available but still lacks ready-to-use, end-to-end NLP libraries. The proposed <a href="https://en.wikipedia.org/wiki/Library_(computing)">library</a>, rust-bert, implements modern language models and ready-to-use pipelines (for example <a href="https://en.wikipedia.org/wiki/Translation">translation</a> or summarization). This allows further development by the Rust community from both NLP experts and non-specialists. It is hoped that this <a href="https://en.wikipedia.org/wiki/Library_(computing)">library</a> will accelerate the development of the NLP ecosystem in Rust. The <a href="https://en.wikipedia.org/wiki/Library_(computing)">library</a> is under active development and available at https://github.com/guillaume-be/rust-bert.</abstract>
      <url hash="ab1aeb36">2020.nlposs-1.4</url>
      <doi>10.18653/v1/2020.nlposs-1.4</doi>
      <video href="https://slideslive.com/38939741" />
      <bibkey>becquin-2020-end</bibkey>
      <pwccode url="https://github.com/guillaume-be/rust-bert" additional="false">guillaume-be/rust-bert</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/squad">SQuAD</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/sst">SST</pwcdataset>
    </paper>
    <paper id="12">
      <title>Open Korean Corpora : A Practical Report<fixed-case>K</fixed-case>orean Corpora: A Practical Report</title>
      <author><first>Won Ik</first><last>Cho</last></author>
      <author><first>Sangwhan</first><last>Moon</last></author>
      <author><first>Youngsook</first><last>Song</last></author>
      <pages>85–93</pages>
      <abstract>Korean is often referred to as a low-resource language in the research community. While this claim is partially true, it is also because the availability of resources is inadequately advertised and curated. This work curates and reviews a list of Korean corpora, first describing institution-level resource development, then further iterate through a list of current open datasets for different types of tasks. We then propose a direction on how open-source dataset construction and releases should be done for less-resourced languages to promote research.</abstract>
      <url hash="6aeea4aa">2020.nlposs-1.12</url>
      <doi>10.18653/v1/2020.nlposs-1.12</doi>
      <video href="https://slideslive.com/38939751" />
      <bibkey>cho-etal-2020-open</bibkey>
      <pwcdataset url="https://paperswithcode.com/dataset/clovacall">ClovaCall</pwcdataset>
      <pwcdataset url="https://paperswithcode.com/dataset/natural-questions">Natural Questions</pwcdataset>
    </paper>
    <paper id="15">
      <title>PySBD : Pragmatic Sentence Boundary Disambiguation<fixed-case>P</fixed-case>y<fixed-case>SBD</fixed-case>: Pragmatic Sentence Boundary Disambiguation</title>
      <author><first>Nipun</first><last>Sadvilkar</last></author>
      <author><first>Mark</first><last>Neumann</last></author>
      <pages>110–114</pages>
      <abstract>We present a rule-based sentence boundary disambiguation Python package that works out-of-the-box for 22 languages. We aim to provide a realistic segmenter which can provide <a href="https://en.wikipedia.org/wiki/Sentence_(linguistics)">logical sentences</a> even when the format and domain of the input text is unknown. In our work, we adapt the Golden Rules Set (a language specific set of sentence boundary exemplars) originally implemented as a ruby gem pragmatic segmenter which we ported to <a href="https://en.wikipedia.org/wiki/Python_(programming_language)">Python</a> with additional improvements and functionality. PySBD passes 97.92 % of the Golden Rule Set examplars for <a href="https://en.wikipedia.org/wiki/English_language">English</a>, an improvement of 25 % over the next best open source Python tool.</abstract>
      <url hash="a8f7aca7">2020.nlposs-1.15</url>
      <attachment type="OptionalSupplementaryMaterial" hash="629e1b58">2020.nlposs-1.15.OptionalSupplementaryMaterial.zip</attachment>
      <doi>10.18653/v1/2020.nlposs-1.15</doi>
      <video href="https://slideslive.com/38939754" />
      <bibkey>sadvilkar-neumann-2020-pysbd</bibkey>
      <pwccode url="https://github.com/nipunsadvilkar/pySBD" additional="false">nipunsadvilkar/pySBD</pwccode>
      <pwcdataset url="https://paperswithcode.com/dataset/genia">GENIA</pwcdataset>
    </paper>
    <paper id="17">
      <title>SacreROUGE : An Open-Source Library for Using and Developing Summarization Evaluation Metrics<fixed-case>S</fixed-case>acre<fixed-case>ROUGE</fixed-case>: An Open-Source Library for Using and Developing Summarization Evaluation Metrics</title>
      <author><first>Daniel</first><last>Deutsch</last></author>
      <author><first>Dan</first><last>Roth</last></author>
      <pages>120–125</pages>
      <abstract>We present SacreROUGE, an <a href="https://en.wikipedia.org/wiki/Open-source_software">open-source library</a> for using and developing summarization evaluation metrics. SacreROUGE removes many obstacles that researchers face when using or developing metrics : (1) The <a href="https://en.wikipedia.org/wiki/Library_(computing)">library</a> provides Python wrappers around the official implementations of existing evaluation metrics so they share a common, easy-to-use interface ; (2) it provides functionality to evaluate how well any metric implemented in the <a href="https://en.wikipedia.org/wiki/Library_(computing)">library</a> correlates to human-annotated judgments, so no additional code needs to be written for a new evaluation metric ; and (3) it includes scripts for loading datasets that contain human judgments so they can easily be used for evaluation. This work describes the design of the <a href="https://en.wikipedia.org/wiki/Library_(computing)">library</a>, including the core Metric interface, the command-line API for evaluating summarization models and metrics, and the scripts to load and reformat publicly available datasets. The development of SacreROUGE is ongoing and open to contributions from the community.</abstract>
      <url hash="2c4f247d">2020.nlposs-1.17</url>
      <attachment type="OptionalSupplementaryMaterial" hash="16198289">2020.nlposs-1.17.OptionalSupplementaryMaterial.pdf</attachment>
      <doi>10.18653/v1/2020.nlposs-1.17</doi>
      <video href="https://slideslive.com/38939755" />
      <bibkey>deutsch-roth-2020-sacrerouge</bibkey>
      <pwccode url="https://github.com/danieldeutsch/sacrerouge" additional="false">danieldeutsch/sacrerouge</pwccode>
    </paper>
    </volume>
</collection>