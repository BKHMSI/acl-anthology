<?xml version='1.0' encoding='utf-8'?>
<collection id="2020.ecomnlp">
  <volume id="1" ingest-date="2020-11-29">
    <meta>
      <booktitle>Proceedings of Workshop on Natural Language Processing in E-Commerce</booktitle>
      <editor><first>Huasha</first><last>Zhao</last></editor>
      <editor><first>Parikshit</first><last>Sondhi</last></editor>
      <editor><first>Nguyen</first><last>Bach</last></editor>
      <editor><first>Sanjika</first><last>Hewavitharana</last></editor>
      <editor><first>Yifan</first><last>He</last></editor>
      <editor><first>Luo</first><last>Si</last></editor>
      <editor><first>Heng</first><last>Ji</last></editor>
      <publisher>Association for Computational Linguistics</publisher>
      <address>Barcelona, Spain</address>
      <month>Dec</month>
      <year>2020</year>
    </meta>
    <frontmatter>
      <url hash="4a8c8d7a">2020.ecomnlp-1.0</url>
      <bibkey>ecomnlp-2020-natural</bibkey>
    </frontmatter>
    <paper id="7">
      <title>BERT-based similarity learning for product matching<fixed-case>BERT</fixed-case>-based similarity learning for product matching</title>
      <author><first>Janusz</first><last>Tracz</last></author>
      <author><first>Piotr Iwo</first><last>Wójcik</last></author>
      <author><first>Kalina</first><last>Jasinska-Kobus</last></author>
      <author><first>Riccardo</first><last>Belluzzo</last></author>
      <author><first>Robert</first><last>Mroczkowski</last></author>
      <author><first>Ireneusz</first><last>Gawlik</last></author>
      <pages>66–75</pages>
      <abstract>Product matching, i.e., being able to infer the product being sold for a merchant-created offer, is crucial for any <a href="https://en.wikipedia.org/wiki/E-commerce">e-commerce marketplace</a>, enabling product-based navigation, <a href="https://en.wikipedia.org/wiki/Comparison_shopping_website">price comparisons</a>, <a href="https://en.wikipedia.org/wiki/Review_site">product reviews</a>, etc. This problem proves a challenging task, mostly due to the extent of product catalog, data heterogeneity, missing product representants, and varying levels of <a href="https://en.wikipedia.org/wiki/Data_quality">data quality</a>. Moreover, new products are being introduced every day, making it difficult to cast the <a href="https://en.wikipedia.org/wiki/Problem_solving">problem</a> as a classification task. In this work, we apply BERT-based models in a similarity learning setup to solve the product matching problem. We provide a thorough ablation study, showing the impact of <a href="https://en.wikipedia.org/wiki/Architecture">architecture</a> and training objective choices. Application of transformer-based architectures and proper <a href="https://en.wikipedia.org/wiki/Sampling_(signal_processing)">sampling techniques</a> significantly boosts performance for a range of e-commerce domains, allowing for <a href="https://en.wikipedia.org/wiki/Software_deployment">production deployment</a>.</abstract>
      <url hash="1842535e">2020.ecomnlp-1.7</url>
      <bibkey>tracz-etal-2020-bert</bibkey>
    </paper>
    </volume>
</collection>