<?xml version='1.0' encoding='utf-8'?>
<collection id="2020.ecnlp">
  <volume id="1" ingest-date="2020-06-21">
    <meta>
      <booktitle>Proceedings of The 3rd Workshop on e-Commerce and NLP</booktitle>
      <editor><first>Shervin</first><last>Malmasi</last></editor>
      <editor><first>Surya</first><last>Kallumadi</last></editor>
      <editor><first>Nicola</first><last>Ueffing</last></editor>
      <editor><first>Oleg</first><last>Rokhlenko</last></editor>
      <editor><first>Eugene</first><last>Agichtein</last></editor>
      <editor><first>Ido</first><last>Guy</last></editor>
      <publisher>Association for Computational Linguistics</publisher>
      <address>Seattle, WA, USA</address>
      <month>July</month>
      <year>2020</year>
      <url hash="e2c30d8c">2020.ecnlp-1</url>
    </meta>
    <frontmatter>
      <url hash="11960fe3">2020.ecnlp-1.0</url>
      <bibkey>ecnlp-2020-e</bibkey>
    </frontmatter>
    <paper id="1">
      <title>Bootstrapping Named Entity Recognition in E-Commerce with Positive Unlabeled Learning<fixed-case>E</fixed-case>-Commerce with Positive Unlabeled Learning</title>
      <author><first>Hanchu</first><last>Zhang</last></author>
      <author><first>Leonhard</first><last>Hennig</last></author>
      <author><first>Christoph</first><last>Alt</last></author>
      <author><first>Changjian</first><last>Hu</last></author>
      <author><first>Yao</first><last>Meng</last></author>
      <author><first>Chao</first><last>Wang</last></author>
      <pages>1–6</pages>
      <abstract>In this work, we introduce a bootstrapped, iterative NER model that integrates a PU learning algorithm for recognizing <a href="https://en.wikipedia.org/wiki/Named-entity_recognition">named entities</a> in a low-resource setting. Our approach combines dictionary-based labeling with syntactically-informed label expansion to efficiently enrich the seed dictionaries. Experimental results on a dataset of manually annotated e-commerce product descriptions demonstrate the effectiveness of the proposed <a href="https://en.wikipedia.org/wiki/Software_framework">framework</a>.</abstract>
      <url hash="fd66db14">2020.ecnlp-1.1</url>
      <doi>10.18653/v1/2020.ecnlp-1.1</doi>
      <video href="http://slideslive.com/38931239" />
      <bibkey>zhang-etal-2020-bootstrapping</bibkey>
    </paper>
    <paper id="4">
      <title>A <a href="https://en.wikipedia.org/wiki/Deep_learning">Deep Learning System</a> for Sentiment Analysis of Service Calls</title>
      <author><first>Yanan</first><last>Jia</last></author>
      <pages>24–34</pages>
      <abstract>Sentiment analysis is crucial for the advancement of <a href="https://en.wikipedia.org/wiki/Artificial_intelligence">artificial intelligence (AI)</a>. Sentiment understanding can help <a href="https://en.wikipedia.org/wiki/Artificial_intelligence">AI</a> to replicate <a href="https://en.wikipedia.org/wiki/Human–computer_interaction">human language and discourse</a>. Studying the formation and response of sentiment state from well-trained Customer Service Representatives (CSRs) can help make the interaction between humans and AI more intelligent. In this paper, a sentiment analysis pipeline is first carried out with respect to real-world multi-party conversations-that is, <a href="https://en.wikipedia.org/wiki/Service_(systems_architecture)">service calls</a>. Based on the acoustic and linguistic features extracted from the source information, a novel aggregated method for voice sentiment recognition framework is built. Each party’s sentiment pattern during the communication is investigated along with the interaction sentiment pattern between all parties.</abstract>
      <url hash="8824315c">2020.ecnlp-1.4</url>
      <doi>10.18653/v1/2020.ecnlp-1.4</doi>
      <video href="http://slideslive.com/38931243" />
      <bibkey>jia-2020-deep</bibkey>
    </paper>
    <paper id="11">
      <title>SimsterQ : A Similarity based Clustering Approach to Opinion Question Answering<fixed-case>S</fixed-case>imster<fixed-case>Q</fixed-case>: <fixed-case>A</fixed-case> Similarity based Clustering Approach to Opinion Question Answering</title>
      <author><first>Aishwarya</first><last>Ashok</last></author>
      <author><first>Ganapathy</first><last>Natarajan</last></author>
      <author><first>Ramez</first><last>Elmasri</last></author>
      <author><first>Laurel</first><last>Smith-Stvan</last></author>
      <pages>69–76</pages>
      <abstract>In recent years, there has been an increase in <a href="https://en.wikipedia.org/wiki/Online_shopping">online shopping</a> resulting in an increased number of <a href="https://en.wikipedia.org/wiki/Review_site">online reviews</a>. Customers can not delve into the huge amount of data when they are looking for specific aspects of a product. Some of these aspects can be extracted from the <a href="https://en.wikipedia.org/wiki/Product_review">product reviews</a>. In this paper we introduced SimsterQ-a clustering based system for answering questions that makes use of word vectors. Clustering was performed using cosine similarity scores between sentence vectors of reviews and questions. Two variants (Sim and Median) with and without <a href="https://en.wikipedia.org/wiki/Stopword">stopwords</a> were evaluated against traditional methods that use <a href="https://en.wikipedia.org/wiki/Term_frequency">term frequency</a>. We also used an n-gram approach to study the effect of <a href="https://en.wikipedia.org/wiki/Noise">noise</a>. We used the reviews in the Amazon Reviews dataset to pick the answers. Evaluation was performed both at the individual sentence level using the top sentence from <a href="https://en.wikipedia.org/wiki/Okapi_BM25">Okapi BM25</a> as the gold standard and at the whole answer level using review snippets as the gold standard. At the <a href="https://en.wikipedia.org/wiki/Sentence_(linguistics)">sentence level</a> our <a href="https://en.wikipedia.org/wiki/System">system</a> performed slightly better than a more complicated <a href="https://en.wikipedia.org/wiki/Deep_learning">deep learning method</a>. Our system returned answers similar to the review snippets from the Amazon QA Dataset as measured by the <a href="https://en.wikipedia.org/wiki/Cosine_similarity">cosine similarity</a>. Analysis was also performed on the quality of the <a href="https://en.wikipedia.org/wiki/Cluster_analysis">clusters</a> generated by our <a href="https://en.wikipedia.org/wiki/System">system</a>.</abstract>
      <url hash="2544fc0b">2020.ecnlp-1.11</url>
      <doi>10.18653/v1/2020.ecnlp-1.11</doi>
      <bibkey>ashok-etal-2020-simsterq</bibkey>
    </paper>
    <paper id="13">
      <title>On Application of Bayesian Parametric and Non-parametric Methods for User Cohorting in Product Search<fixed-case>B</fixed-case>ayesian Parametric and Non-parametric Methods for User Cohorting in Product Search</title>
      <author><first>Shashank</first><last>Gupta</last></author>
      <pages>86–89</pages>
      <abstract>In this paper, we study the applicability of Bayesian Parametric and Non-parametric methods for user clustering in an E-commerce search setting. To the best of our knowledge, this is the first work that presents a comparative study of various Bayesian clustering methods in the context of product search. Specifically, we cluster users based on their topical patterns from their respective product search queries. To evaluate the quality of the <a href="https://en.wikipedia.org/wiki/Cluster_analysis">clusters</a> formed, we perform a collaborative query recommendation task. Our findings indicate that simple parametric model like Latent Dirichlet Allocation (LDA) outperforms more sophisticated non-parametric methods like Distance Dependent Chinese Restaurant Process and Dirichlet Process-based clustering in both tasks.</abstract>
      <url hash="b57c3987">2020.ecnlp-1.13</url>
      <doi>10.18653/v1/2020.ecnlp-1.13</doi>
      <video href="http://slideslive.com/38931245" />
      <bibkey>gupta-2020-application</bibkey>
    </paper>
  </volume>
</collection>